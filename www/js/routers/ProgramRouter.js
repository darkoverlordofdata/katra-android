// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(["jquery", "backbone", "../models/ProgramModel", "../collections/ProgramsCollection", "../views/ProgramView"], function($, Backbone, ProgramModel, ProgramsCollection, ProgramView) {
  var ProgramRouter, _ref;
  return ProgramRouter = (function(_super) {
    __extends(ProgramRouter, _super);

    function ProgramRouter() {
      _ref = ProgramRouter.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    ProgramRouter.prototype.initialize = function() {
      this.animalsView = new ProgramView({
        el: "#animals",
        collection: new ProgramsCollection([], {
          type: "animals"
        })
      });
      this.colorsView = new ProgramView({
        el: "#colors",
        collection: new ProgramsCollection([], {
          type: "colors"
        })
      });
      this.vehiclesView = new ProgramView({
        el: "#vehicles",
        collection: new ProgramsCollection([], {
          type: "vehicles"
        })
      });
      return Backbone.history.start();
    };

    ProgramRouter.prototype.routes = {
      "": "home",
      "category?:type": "category"
    };

    ProgramRouter.prototype.home = function() {
      return $.mobile.changePage("#categories", {
        reverse: false,
        changeHash: false
      });
    };

    ProgramRouter.prototype.category = function(type) {
      var currentView;
      currentView = this[type + "View"];
      if (!currentView.collection.length) {
        $.mobile.loading("show");
        return currentView.collection.fetch().done(function() {
          return $.mobile.changePage("#" + type, {
            reverse: false,
            changeHash: false
          });
        });
      } else {
        return $.mobile.changePage("#" + type, {
          reverse: false,
          changeHash: false
        });
      }
    };

    return ProgramRouter;

  })(Backbone.Router);
});

/* parser generated by jison 0.4.13 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var kc = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"Program":3,"Line":4,"EOF":5,"NEWLINE":6,"INTEGER":7,"Statement":8,"Command":9,"CLS":10,"DEL":11,",":12,"GET":13,"FILE":14,"LIST":15,"PURGE":16,"RUN":17,"SAVE":18,"SCR":19,"BASE":20,"(":21,")":22,"DATA":23,"ConstantList":24,"DEF":25,"FND":26,"VAR":27,"=":28,"Expression":29,"DIM":30,"DimList":31,"END":32,"FOR":33,"TO":34,"STEP":35,"GOTO":36,"OF":37,"IntegerList":38,"GOSUB":39,"IF":40,"THEN":41,"IMAGE":42,"ImageList":43,"INPUT":44,"VarList":45,"STRING":46,"LET":47,"LetList":48,"MAT":49,"ZER":50,"CON":51,"NEXT":52,"PRINT":53,"PrintList":54,"PrintSep":55,"USING":56,";":57,"RANDOMIZE":58,"READ":59,"RETURN":60,"REM":61,"STOP":62,"OR":63,"AND":64,"NOT":65,"EQ":66,"NE":67,">":68,"GE":69,"<":70,"LE":71,"+":72,"-":73,"*":74,"/":75,"^":76,"[":77,"ExpressionList":78,"]":79,"ABS":80,"ATN":81,"COS":82,"EXP":83,"INT":84,"LEN":85,"LIN":86,"LOG":87,"RND":88,"SGN":89,"SIN":90,"SPA":91,"SQR":92,"SUBSTR":93,"TAB":94,"TAN":95,"TIM":96,"Constant":97,"NUMBER":98,"Dim":99,"VarItem":100,":":101,"ImageItem":102,"ImageMask":103,"ImageMaskItem":104,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",6:"NEWLINE",7:"INTEGER",10:"CLS",11:"DEL",12:",",13:"GET",14:"FILE",15:"LIST",16:"PURGE",17:"RUN",18:"SAVE",19:"SCR",20:"BASE",21:"(",22:")",23:"DATA",25:"DEF",26:"FND",27:"VAR",28:"=",30:"DIM",32:"END",33:"FOR",34:"TO",35:"STEP",36:"GOTO",37:"OF",39:"GOSUB",40:"IF",41:"THEN",42:"IMAGE",44:"INPUT",46:"STRING",47:"LET",49:"MAT",50:"ZER",51:"CON",52:"NEXT",53:"PRINT",56:"USING",57:";",58:"RANDOMIZE",59:"READ",60:"RETURN",61:"REM",62:"STOP",63:"OR",64:"AND",65:"NOT",66:"EQ",67:"NE",68:">",69:"GE",70:"<",71:"LE",72:"+",73:"-",74:"*",75:"/",76:"^",77:"[",79:"]",80:"ABS",81:"ATN",82:"COS",83:"EXP",84:"INT",85:"LEN",86:"LIN",87:"LOG",88:"RND",89:"SGN",90:"SIN",91:"SPA",92:"SQR",93:"SUBSTR",94:"TAB",95:"TAN",96:"TIM",98:"NUMBER",101:":"},
productions_: [0,[3,3],[3,3],[3,2],[3,2],[4,2],[4,1],[4,1],[9,1],[9,1],[9,2],[9,4],[9,1],[9,2],[9,1],[9,2],[9,4],[9,2],[9,1],[9,2],[9,1],[8,4],[8,2],[8,7],[8,2],[8,1],[8,6],[8,8],[8,2],[8,4],[8,2],[8,4],[8,2],[8,2],[8,4],[8,3],[8,2],[8,4],[8,4],[8,2],[8,1],[8,2],[8,3],[8,3],[8,5],[8,1],[8,2],[8,1],[8,1],[8,1],[29,3],[29,3],[29,2],[29,3],[29,3],[29,3],[29,3],[29,3],[29,3],[29,3],[29,3],[29,3],[29,3],[29,3],[29,2],[29,3],[29,1],[29,4],[29,4],[29,4],[29,4],[29,4],[29,4],[29,4],[29,4],[29,4],[29,4],[29,4],[29,4],[29,4],[29,4],[29,4],[29,8],[29,4],[29,4],[29,4],[29,1],[97,1],[97,1],[97,1],[31,1],[31,3],[99,4],[99,4],[48,2],[48,5],[48,3],[48,6],[24,1],[24,3],[38,1],[38,3],[78,1],[78,3],[45,1],[45,3],[100,1],[100,4],[54,1],[54,3],[55,1],[55,1],[55,1],[43,1],[43,3],[102,1],[102,1],[103,1],[103,4],[104,1],[104,2]],
performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
/* this == yyval */

var $0 = $$.length - 1;
switch (yystate) {
case 5:this.$ = new krt.Statement($$[$0-1], $$[$0]);
break;
case 6:this.$ = new krt.Statement($$[$0]);
break;
case 7:this.$ = new krt.Statement($$[$0]);
break;
case 8:this.$ = krt.cls();
break;
case 9:this.$ = krt.del();
break;
case 10:this.$ = krt.del($$[$0]);
break;
case 11:this.$ = krt.del($$[$0-2], $$[$0]);
break;
case 12:this.$ = krt.del($$[$0]);
break;
case 13:this.$ = krt.get($$[$0]);
break;
case 14:this.$ = krt.list();
break;
case 15:this.$ = krt.list($$[$0]);
break;
case 16:this.$ = krt.list($$[$0-2], $$[$0]);
break;
case 17:this.$ = krt.purge($$[$0]);
break;
case 18:this.$ = krt.run();
break;
case 19:this.$ = krt.save($$[$0]);
break;
case 20:this.$ = krt.scr();
break;
case 21:this.$ = new krt.Base($$[$0-1]);
break;
case 22:this.$ = new krt.Data($$[$0]);
break;
case 23:this.$ = new krt.Def($$[$0-5], $$[$0-3], $$[$0]);
break;
case 24:this.$ = new krt.Dim($$[$0]);
break;
case 25:this.$ = new krt.End();
break;
case 26:this.$ = new krt.For($$[$0-4], $$[$0-2], $$[$0]);
break;
case 27:this.$ = new krt.For($$[$0-6], $$[$0-4], $$[$0-2], $$[$0]);
break;
case 28:this.$ = new krt.Goto($$[$0]);
break;
case 29:this.$ = new krt.Goto($$[$0-2], $$[$0]);
break;
case 30:this.$ = new krt.Gosub($$[$0]);
break;
case 31:this.$ = new krt.If($$[$0-2], $$[$0]);
break;
case 32:this.$ = new krt.Image($$[$0]);
break;
case 33:this.$ = new krt.Input($$[$0]);
break;
case 34:this.$ = new krt.Input($$[$0], $$[$0-2]);
break;
case 35:this.$ = new krt.Let($$[$0-1], $$[$0]);
break;
case 36:this.$ = new krt.Let($$[$0-1], $$[$0]);
break;
case 37:this.$ = new krt.Mat(new krt.Var($$[$0-2]), krt.Zer);
break;
case 38:this.$ = new krt.Mat(new krt.Var($$[$0-2]), krt.Con);
break;
case 39:this.$ = new krt.Next(new krt.Var($$[$0]));
break;
case 40:this.$ = new krt.Print();
break;
case 41:this.$ = new krt.Print($$[$0]);
break;
case 42:this.$ = new krt.Print($$[$0-1], $$[$0]);
break;
case 43:this.$ = new krt.Using($$[$0]);
break;
case 44:this.$ = new krt.Using($$[$0-2], $$[$0]);
break;
case 45:this.$ = new krt.Randomize();
break;
case 46:this.$ = new krt.Read($$[$0]);
break;
case 47:this.$ = new krt.Return();
break;
case 48:this.$ = new krt.Rem($$[$0]);
break;
case 49:this.$ = new krt.Stop();
break;
case 50:this.$ = new krt.OR($$[$0-2], $$[$0]);
break;
case 51:this.$ = new krt.AND($$[$0-2], $$[$0]);
break;
case 52:this.$ = new krt.NOT($$[$0]);
break;
case 53:this.$ = new krt.EQ($$[$0-2], $$[$0]);
break;
case 54:this.$ = new krt.NE($$[$0-2], $$[$0]);
break;
case 55:this.$ = new krt.GT($$[$0-2], $$[$0]);
break;
case 56:this.$ = new krt.GE($$[$0-2], $$[$0]);
break;
case 57:this.$ = new krt.LT($$[$0-2], $$[$0]);
break;
case 58:this.$ = new krt.LE($$[$0-2], $$[$0]);
break;
case 59:this.$ = new krt.Add($$[$0-2], $$[$0]);
break;
case 60:this.$ = new krt.Sub($$[$0-2], $$[$0]);
break;
case 61:this.$ = new krt.Mul($$[$0-2], $$[$0]);
break;
case 62:this.$ = new krt.Div($$[$0-2], $$[$0]);
break;
case 63:this.$ = new krt.Pow($$[$0-2], $$[$0]);
break;
case 64:this.$ = -$$[$0];
break;
case 65:this.$ = $$[$0-1];
break;
case 66:this.$ = new krt.Var($$[$0]);
break;
case 67:this.$ = new krt.Var($$[$0-3], $$[$0-2], $$[$0-1]);
break;
case 68:this.$ = new krt.Udf($$[$0-3], $$[$0-1]);
break;
case 69:this.$ = new krt.ABS($$[$0-1]);
break;
case 70:this.$ = new krt.ATN($$[$0-1]);
break;
case 71:this.$ = new krt.COS($$[$0-1]);
break;
case 72:this.$ = new krt.EXP($$[$0-1]);
break;
case 73:this.$ = new krt.INT($$[$0-1]);
break;
case 74:this.$ = new krt.LEN($$[$0-1]);
break;
case 75:this.$ = new krt.LIN($$[$0-1]);
break;
case 76:this.$ = new krt.LOG($$[$0-1]);
break;
case 77:this.$ = new krt.RND($$[$0-1]);
break;
case 78:this.$ = new krt.SGN($$[$0-1]);
break;
case 79:this.$ = new krt.SIN($$[$0-1]);
break;
case 80:this.$ = new krt.SPA($$[$0-1]);
break;
case 81:this.$ = new krt.SQR($$[$0-1]);
break;
case 82:this.$ = new krt.SUBSTR($$[$0-5], $$[$0-3], $$[$0-1]);
break;
case 83:this.$ = new krt.TAB($$[$0-1]);
break;
case 84:this.$ = new krt.TAN($$[$0-1]);
break;
case 85:this.$ = new krt.TIM($$[$0-1]);
break;
case 86:this.$ = $$[$0];
break;
case 87:this.$ = new krt.Const(parseInt($$[$0]));
break;
case 88:this.$ = new krt.Const($$[$0]);
break;
case 89:this.$ = new krt.Const(Number($$[$0]));
break;
case 90:this.$ = [$$[$0]];
break;
case 91:this.$ = [$$[$0-2], $$[$0]];
break;
case 92:this.$ = new krt.Var($$[$0-3], $$[$0-2], $$[$0-1]);
break;
case 93:this.$ = new krt.Var($$[$0-3], $$[$0-2], $$[$0-1]);
break;
case 94:this.$ = [$$[$0-1]];
break;
case 95:this.$ = [new krt.Var($$[$0-4], $$[$0-3], $$[$0-2])];
break;
case 96:this.$ = [$$[$0-2], $$[$0-1]];
break;
case 97:this.$ = [$$[$0-5], new krt.Var($$[$0-4], $$[$0-3], $$[$0-2])];
break;
case 98:this.$ = [$$[$0]];
break;
case 99:this.$ = [$$[$0-2], $$[$0]];
break;
case 100:this.$ = [$$[$0]];
break;
case 101:this.$ = [$$[$0-2], $$[$0]];
break;
case 102:this.$ = [$$[$0]];
break;
case 103:this.$ = [$$[$0-2], $$[$0]];
break;
case 104:this.$ = [$$[$0]];
break;
case 105:this.$ = [$$[$0-2], $$[$0]];
break;
case 106:this.$ = [$$[$0]];
break;
case 107:this.$ = [new krt.Var($$[$0-3], $$[$0-2], $$[$0-1])];
break;
case 108:this.$ = [$$[$0]];
break;
case 109:this.$ = [$$[$0-2], $$[$0-1], $$[$0]];
break;
case 110:this.$ = krt.NullSep;
break;
case 111:this.$ = krt.Comma;
break;
case 112:this.$ = krt.Semic;
break;
case 113:this.$ = [$$[$0]];
break;
case 114:this.$ = [$$[$0-2], $$[$0-1], $$[$0]];
break;
case 115:this.$ = $$[$0];
break;
case 116:this.$ = $$[$0];
break;
case 117:this.$ = [$$[$0]];
break;
case 118:this.$ = [$$[$0-3], $$[$0-2], $$[$0-1], $$[$0]];
break;
case 119:this.$ = [$$[$0]];
break;
case 120:this.$ = [$$[$0-1], $$[$0]];
break;
}
},
table: [{3:1,4:2,7:[1,3],8:4,9:5,10:[1,27],11:[1,28],13:[1,29],15:[1,30],16:[1,31],17:[1,32],18:[1,33],19:[1,34],20:[1,6],23:[1,7],25:[1,8],27:[1,35],30:[1,9],32:[1,10],33:[1,11],36:[1,12],39:[1,13],40:[1,14],42:[1,15],44:[1,16],47:[1,17],48:18,49:[1,19],52:[1,20],53:[1,21],58:[1,22],59:[1,23],60:[1,24],61:[1,25],62:[1,26]},{1:[3],4:36,7:[1,3],8:4,9:5,10:[1,27],11:[1,28],13:[1,29],15:[1,30],16:[1,31],17:[1,32],18:[1,33],19:[1,34],20:[1,6],23:[1,7],25:[1,8],27:[1,35],30:[1,9],32:[1,10],33:[1,11],36:[1,12],39:[1,13],40:[1,14],42:[1,15],44:[1,16],47:[1,17],48:18,49:[1,19],52:[1,20],53:[1,21],58:[1,22],59:[1,23],60:[1,24],61:[1,25],62:[1,26]},{5:[1,37],6:[1,38]},{5:[2,12],6:[2,12],8:39,20:[1,6],23:[1,7],25:[1,8],27:[1,35],30:[1,9],32:[1,10],33:[1,11],36:[1,12],39:[1,13],40:[1,14],42:[1,15],44:[1,16],47:[1,17],48:18,49:[1,19],52:[1,20],53:[1,21],58:[1,22],59:[1,23],60:[1,24],61:[1,25],62:[1,26]},{5:[2,6],6:[2,6]},{5:[2,7],6:[2,7]},{21:[1,40]},{7:[1,43],24:41,46:[1,44],97:42,98:[1,45]},{26:[1,46]},{27:[1,49],31:47,99:48},{5:[2,25],6:[2,25]},{27:[1,50]},{7:[1,51],21:[1,55],26:[1,57],27:[1,56],29:52,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,76]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:77,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,83],27:[1,84],43:78,46:[1,80],102:79,103:81,104:82},{27:[1,88],45:85,46:[1,86],100:87},{27:[1,35],48:89},{7:[1,43],21:[1,55],26:[1,57],27:[1,91],29:90,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{27:[1,92]},{27:[1,93]},{5:[2,40],6:[2,40],7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:96,46:[1,44],54:94,56:[1,95],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{5:[2,45],6:[2,45]},{27:[1,88],45:97,100:87},{5:[2,47],6:[2,47]},{5:[2,48],6:[2,48]},{5:[2,49],6:[2,49]},{5:[2,8],6:[2,8]},{5:[2,9],6:[2,9],7:[1,98]},{14:[1,99]},{5:[2,14],6:[2,14],7:[1,100]},{14:[1,101]},{5:[2,18],6:[2,18]},{14:[1,102]},{5:[2,20],6:[2,20]},{28:[1,103],77:[1,104]},{5:[1,105],6:[1,106]},{1:[2,3],7:[2,3],10:[2,3],11:[2,3],13:[2,3],15:[2,3],16:[2,3],17:[2,3],18:[2,3],19:[2,3],20:[2,3],23:[2,3],25:[2,3],27:[2,3],30:[2,3],32:[2,3],33:[2,3],36:[2,3],39:[2,3],40:[2,3],42:[2,3],44:[2,3],47:[2,3],49:[2,3],52:[2,3],53:[2,3],58:[2,3],59:[2,3],60:[2,3],61:[2,3],62:[2,3]},{1:[2,4],7:[2,4],10:[2,4],11:[2,4],13:[2,4],15:[2,4],16:[2,4],17:[2,4],18:[2,4],19:[2,4],20:[2,4],23:[2,4],25:[2,4],27:[2,4],30:[2,4],32:[2,4],33:[2,4],36:[2,4],39:[2,4],40:[2,4],42:[2,4],44:[2,4],47:[2,4],49:[2,4],52:[2,4],53:[2,4],58:[2,4],59:[2,4],60:[2,4],61:[2,4],62:[2,4]},{5:[2,5],6:[2,5]},{7:[1,107]},{5:[2,22],6:[2,22],12:[1,108]},{5:[2,98],6:[2,98],12:[2,98]},{5:[2,87],6:[2,87],12:[2,87],22:[2,87],34:[2,87],35:[2,87],37:[2,87],41:[2,87],57:[2,87],63:[2,87],64:[2,87],66:[2,87],67:[2,87],68:[2,87],69:[2,87],70:[2,87],71:[2,87],72:[2,87],73:[2,87],74:[2,87],75:[2,87],76:[2,87],79:[2,87],101:[2,87]},{5:[2,88],6:[2,88],12:[2,88],22:[2,88],34:[2,88],35:[2,88],37:[2,88],41:[2,88],57:[2,88],63:[2,88],64:[2,88],66:[2,88],67:[2,88],68:[2,88],69:[2,88],70:[2,88],71:[2,88],72:[2,88],73:[2,88],74:[2,88],75:[2,88],76:[2,88],79:[2,88],101:[2,88]},{5:[2,89],6:[2,89],12:[2,89],22:[2,89],34:[2,89],35:[2,89],37:[2,89],41:[2,89],57:[2,89],63:[2,89],64:[2,89],66:[2,89],67:[2,89],68:[2,89],69:[2,89],70:[2,89],71:[2,89],72:[2,89],73:[2,89],74:[2,89],75:[2,89],76:[2,89],79:[2,89],101:[2,89]},{21:[1,109]},{5:[2,24],6:[2,24],12:[1,110]},{5:[2,90],6:[2,90],12:[2,90]},{21:[1,112],77:[1,111]},{28:[1,113]},{5:[2,28],6:[2,28],37:[2,87],63:[2,87],64:[2,87],66:[2,87],67:[2,87],68:[2,87],69:[2,87],70:[2,87],71:[2,87],72:[2,87],73:[2,87],74:[2,87],75:[2,87],76:[2,87]},{37:[1,114],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:128,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:129,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:130,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{5:[2,66],6:[2,66],12:[2,66],22:[2,66],34:[2,66],35:[2,66],37:[2,66],41:[2,66],57:[2,66],63:[2,66],64:[2,66],66:[2,66],67:[2,66],68:[2,66],69:[2,66],70:[2,66],71:[2,66],72:[2,66],73:[2,66],74:[2,66],75:[2,66],76:[2,66],77:[1,131],79:[2,66],101:[2,66]},{21:[1,132]},{21:[1,133]},{21:[1,134]},{21:[1,135]},{21:[1,136]},{21:[1,137]},{21:[1,138]},{21:[1,139]},{21:[1,140]},{21:[1,141]},{21:[1,142]},{21:[1,143]},{21:[1,144]},{21:[1,145]},{21:[1,146]},{21:[1,147]},{21:[1,148]},{21:[1,149]},{5:[2,86],6:[2,86],12:[2,86],22:[2,86],34:[2,86],35:[2,86],37:[2,86],41:[2,86],57:[2,86],63:[2,86],64:[2,86],66:[2,86],67:[2,86],68:[2,86],69:[2,86],70:[2,86],71:[2,86],72:[2,86],73:[2,86],74:[2,86],75:[2,86],76:[2,86],79:[2,86],101:[2,86]},{5:[2,30],6:[2,30]},{41:[1,150],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127]},{5:[2,32],6:[2,32],12:[1,151]},{5:[2,113],6:[2,113],12:[2,113],22:[2,113]},{5:[2,115],6:[2,115],12:[2,115],22:[2,115]},{5:[2,116],6:[2,116],12:[2,116],22:[2,116]},{5:[2,117],6:[2,117],12:[2,117],22:[2,117]},{21:[1,152],27:[1,153]},{5:[2,119],6:[2,119],12:[2,119],22:[2,119]},{5:[2,33],6:[2,33],12:[1,154]},{12:[1,155]},{5:[2,104],6:[2,104],12:[2,104]},{5:[2,106],6:[2,106],12:[2,106],77:[1,156]},{7:[1,43],21:[1,55],26:[1,57],27:[1,91],29:157,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{5:[2,36],6:[2,36],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127]},{5:[2,66],6:[2,66],28:[1,158],63:[2,66],64:[2,66],66:[2,66],67:[2,66],68:[2,66],69:[2,66],70:[2,66],71:[2,66],72:[2,66],73:[2,66],74:[2,66],75:[2,66],76:[2,66],77:[1,159]},{28:[1,160]},{5:[2,39],6:[2,39]},{5:[2,41],6:[2,41],12:[1,163],55:161,57:[1,164],101:[1,162]},{7:[1,165]},{5:[2,108],6:[2,108],12:[2,108],57:[2,108],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127],101:[2,108]},{5:[2,46],6:[2,46],12:[1,154]},{5:[2,10],6:[2,10],12:[1,166]},{5:[2,13],6:[2,13]},{5:[2,15],6:[2,15],12:[1,167]},{5:[2,17],6:[2,17]},{5:[2,19],6:[2,19]},{7:[2,94],21:[2,94],26:[2,94],27:[2,94],46:[2,94],65:[2,94],73:[2,94],80:[2,94],81:[2,94],82:[2,94],83:[2,94],84:[2,94],85:[2,94],86:[2,94],87:[2,94],88:[2,94],89:[2,94],90:[2,94],91:[2,94],92:[2,94],93:[2,94],94:[2,94],95:[2,94],96:[2,94],98:[2,94]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:169,46:[1,44],65:[1,53],73:[1,54],78:168,80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{1:[2,1],7:[2,1],10:[2,1],11:[2,1],13:[2,1],15:[2,1],16:[2,1],17:[2,1],18:[2,1],19:[2,1],20:[2,1],23:[2,1],25:[2,1],27:[2,1],30:[2,1],32:[2,1],33:[2,1],36:[2,1],39:[2,1],40:[2,1],42:[2,1],44:[2,1],47:[2,1],49:[2,1],52:[2,1],53:[2,1],58:[2,1],59:[2,1],60:[2,1],61:[2,1],62:[2,1]},{1:[2,2],7:[2,2],10:[2,2],11:[2,2],13:[2,2],15:[2,2],16:[2,2],17:[2,2],18:[2,2],19:[2,2],20:[2,2],23:[2,2],25:[2,2],27:[2,2],30:[2,2],32:[2,2],33:[2,2],36:[2,2],39:[2,2],40:[2,2],42:[2,2],44:[2,2],47:[2,2],49:[2,2],52:[2,2],53:[2,2],58:[2,2],59:[2,2],60:[2,2],61:[2,2],62:[2,2]},{22:[1,170]},{7:[1,43],46:[1,44],97:171,98:[1,45]},{27:[1,172]},{27:[1,49],99:173},{7:[1,175],38:174},{7:[1,175],38:176},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:177,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,175],38:178},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:179,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:180,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:181,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:182,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:183,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:184,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:185,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:186,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:187,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:188,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:189,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:190,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:191,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{5:[2,52],6:[2,52],12:[2,52],22:[2,52],34:[2,52],35:[2,52],37:[2,52],41:[2,52],57:[2,52],63:[2,52],64:[2,52],66:[2,52],67:[2,52],68:[2,52],69:[2,52],70:[2,52],71:[2,52],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127],79:[2,52],101:[2,52]},{5:[2,64],6:[2,64],12:[2,64],22:[2,64],34:[2,64],35:[2,64],37:[2,64],41:[2,64],57:[2,64],63:[2,64],64:[2,64],66:[2,64],67:[2,64],68:[2,64],69:[2,64],70:[2,64],71:[2,64],72:[2,64],73:[2,64],74:[2,64],75:[2,64],76:[2,64],79:[2,64],101:[2,64]},{22:[1,192],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:169,46:[1,44],65:[1,53],73:[1,54],78:193,80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:194,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:195,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:196,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:197,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:198,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:199,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:200,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:201,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:202,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:203,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:204,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:205,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:206,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:207,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:208,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:209,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:210,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:211,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{7:[1,212]},{7:[1,83],27:[1,84],46:[1,80],102:213,103:81,104:82},{7:[1,83],27:[1,84],43:214,46:[1,80],102:79,103:81,104:82},{5:[2,120],6:[2,120],12:[2,120],22:[2,120]},{27:[1,88],100:215},{27:[1,88],45:216,100:87},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:169,46:[1,44],65:[1,53],73:[1,54],78:217,80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{5:[2,35],6:[2,35],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127]},{7:[2,96],21:[2,96],26:[2,96],27:[2,96],46:[2,96],65:[2,96],73:[2,96],80:[2,96],81:[2,96],82:[2,96],83:[2,96],84:[2,96],85:[2,96],86:[2,96],87:[2,96],88:[2,96],89:[2,96],90:[2,96],91:[2,96],92:[2,96],93:[2,96],94:[2,96],95:[2,96],96:[2,96],98:[2,96]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:169,46:[1,44],65:[1,53],73:[1,54],78:218,80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{50:[1,219],51:[1,220]},{5:[2,42],6:[2,42],7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:221,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{5:[2,110],6:[2,110],7:[2,110],21:[2,110],26:[2,110],27:[2,110],46:[2,110],65:[2,110],73:[2,110],80:[2,110],81:[2,110],82:[2,110],83:[2,110],84:[2,110],85:[2,110],86:[2,110],87:[2,110],88:[2,110],89:[2,110],90:[2,110],91:[2,110],92:[2,110],93:[2,110],94:[2,110],95:[2,110],96:[2,110],98:[2,110]},{5:[2,111],6:[2,111],7:[2,111],21:[2,111],26:[2,111],27:[2,111],46:[2,111],65:[2,111],73:[2,111],80:[2,111],81:[2,111],82:[2,111],83:[2,111],84:[2,111],85:[2,111],86:[2,111],87:[2,111],88:[2,111],89:[2,111],90:[2,111],91:[2,111],92:[2,111],93:[2,111],94:[2,111],95:[2,111],96:[2,111],98:[2,111]},{5:[2,112],6:[2,112],7:[2,112],21:[2,112],26:[2,112],27:[2,112],46:[2,112],65:[2,112],73:[2,112],80:[2,112],81:[2,112],82:[2,112],83:[2,112],84:[2,112],85:[2,112],86:[2,112],87:[2,112],88:[2,112],89:[2,112],90:[2,112],91:[2,112],92:[2,112],93:[2,112],94:[2,112],95:[2,112],96:[2,112],98:[2,112]},{5:[2,43],6:[2,43],57:[1,222]},{7:[1,223]},{7:[1,224]},{12:[1,226],79:[1,225]},{12:[2,102],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127],79:[2,102]},{5:[2,21],6:[2,21]},{5:[2,99],6:[2,99],12:[2,99]},{22:[1,227]},{5:[2,91],6:[2,91],12:[2,91]},{12:[1,229],79:[1,228]},{5:[2,100],6:[2,100],12:[2,100],22:[2,100],79:[2,100]},{12:[1,229],22:[1,230]},{34:[1,231],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127]},{5:[2,29],6:[2,29],12:[1,229]},{5:[2,50],6:[2,50],12:[2,50],22:[2,50],34:[2,50],35:[2,50],37:[2,50],41:[2,50],57:[2,50],63:[2,50],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127],79:[2,50],101:[2,50]},{5:[2,51],6:[2,51],12:[2,51],22:[2,51],34:[2,51],35:[2,51],37:[2,51],41:[2,51],57:[2,51],63:[2,51],64:[2,51],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127],79:[2,51],101:[2,51]},{5:[2,53],6:[2,53],12:[2,53],22:[2,53],34:[2,53],35:[2,53],37:[2,53],41:[2,53],57:[2,53],63:[2,53],64:[2,53],66:[2,53],67:[2,53],68:[2,53],69:[2,53],70:[2,53],71:[2,53],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127],79:[2,53],101:[2,53]},{5:[2,54],6:[2,54],12:[2,54],22:[2,54],34:[2,54],35:[2,54],37:[2,54],41:[2,54],57:[2,54],63:[2,54],64:[2,54],66:[2,54],67:[2,54],68:[2,54],69:[2,54],70:[2,54],71:[2,54],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127],79:[2,54],101:[2,54]},{5:[2,55],6:[2,55],12:[2,55],22:[2,55],34:[2,55],35:[2,55],37:[2,55],41:[2,55],57:[2,55],63:[2,55],64:[2,55],66:[2,55],67:[2,55],68:[2,55],69:[2,55],70:[2,55],71:[2,55],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127],79:[2,55],101:[2,55]},{5:[2,56],6:[2,56],12:[2,56],22:[2,56],34:[2,56],35:[2,56],37:[2,56],41:[2,56],57:[2,56],63:[2,56],64:[2,56],66:[2,56],67:[2,56],68:[2,56],69:[2,56],70:[2,56],71:[2,56],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127],79:[2,56],101:[2,56]},{5:[2,57],6:[2,57],12:[2,57],22:[2,57],34:[2,57],35:[2,57],37:[2,57],41:[2,57],57:[2,57],63:[2,57],64:[2,57],66:[2,57],67:[2,57],68:[2,57],69:[2,57],70:[2,57],71:[2,57],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127],79:[2,57],101:[2,57]},{5:[2,58],6:[2,58],12:[2,58],22:[2,58],34:[2,58],35:[2,58],37:[2,58],41:[2,58],57:[2,58],63:[2,58],64:[2,58],66:[2,58],67:[2,58],68:[2,58],69:[2,58],70:[2,58],71:[2,58],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127],79:[2,58],101:[2,58]},{5:[2,59],6:[2,59],12:[2,59],22:[2,59],34:[2,59],35:[2,59],37:[2,59],41:[2,59],57:[2,59],63:[2,59],64:[2,59],66:[2,59],67:[2,59],68:[2,59],69:[2,59],70:[2,59],71:[2,59],72:[2,59],73:[2,59],74:[1,125],75:[1,126],76:[1,127],79:[2,59],101:[2,59]},{5:[2,60],6:[2,60],12:[2,60],22:[2,60],34:[2,60],35:[2,60],37:[2,60],41:[2,60],57:[2,60],63:[2,60],64:[2,60],66:[2,60],67:[2,60],68:[2,60],69:[2,60],70:[2,60],71:[2,60],72:[2,60],73:[2,60],74:[1,125],75:[1,126],76:[1,127],79:[2,60],101:[2,60]},{5:[2,61],6:[2,61],12:[2,61],22:[2,61],34:[2,61],35:[2,61],37:[2,61],41:[2,61],57:[2,61],63:[2,61],64:[2,61],66:[2,61],67:[2,61],68:[2,61],69:[2,61],70:[2,61],71:[2,61],72:[2,61],73:[2,61],74:[2,61],75:[2,61],76:[1,127],79:[2,61],101:[2,61]},{5:[2,62],6:[2,62],12:[2,62],22:[2,62],34:[2,62],35:[2,62],37:[2,62],41:[2,62],57:[2,62],63:[2,62],64:[2,62],66:[2,62],67:[2,62],68:[2,62],69:[2,62],70:[2,62],71:[2,62],72:[2,62],73:[2,62],74:[2,62],75:[2,62],76:[1,127],79:[2,62],101:[2,62]},{5:[2,63],6:[2,63],12:[2,63],22:[2,63],34:[2,63],35:[2,63],37:[2,63],41:[2,63],57:[2,63],63:[2,63],64:[2,63],66:[2,63],67:[2,63],68:[2,63],69:[2,63],70:[2,63],71:[2,63],72:[2,63],73:[2,63],74:[2,63],75:[2,63],76:[2,63],79:[2,63],101:[2,63]},{5:[2,65],6:[2,65],12:[2,65],22:[2,65],34:[2,65],35:[2,65],37:[2,65],41:[2,65],57:[2,65],63:[2,65],64:[2,65],66:[2,65],67:[2,65],68:[2,65],69:[2,65],70:[2,65],71:[2,65],72:[2,65],73:[2,65],74:[2,65],75:[2,65],76:[2,65],79:[2,65],101:[2,65]},{12:[1,226],79:[1,232]},{22:[1,233],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127]},{22:[1,234],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127]},{22:[1,235],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127]},{22:[1,236],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127]},{22:[1,237],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127]},{22:[1,238],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127]},{22:[1,239],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127]},{22:[1,240],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127]},{22:[1,241],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127]},{22:[1,242],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127]},{22:[1,243],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127]},{22:[1,244],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127]},{22:[1,245],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127]},{22:[1,246],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127]},{12:[1,247],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127]},{22:[1,248],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127]},{22:[1,249],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127]},{22:[1,250],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127]},{5:[2,31],6:[2,31]},{5:[2,114],6:[2,114],12:[2,114],22:[2,114]},{12:[1,151],22:[1,251]},{5:[2,105],6:[2,105],12:[2,105]},{5:[2,34],6:[2,34],12:[1,154]},{12:[1,226],79:[1,252]},{12:[1,226],79:[1,253]},{5:[2,37],6:[2,37]},{5:[2,38],6:[2,38]},{5:[2,109],6:[2,109],12:[2,109],57:[2,109],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127],101:[2,109]},{27:[1,88],45:254,100:87},{5:[2,11],6:[2,11]},{5:[2,16],6:[2,16]},{28:[1,255]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:256,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{28:[1,257]},{5:[2,92],6:[2,92],12:[2,92]},{7:[1,258]},{5:[2,93],6:[2,93],12:[2,93]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:259,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{5:[2,67],6:[2,67],12:[2,67],22:[2,67],34:[2,67],35:[2,67],37:[2,67],41:[2,67],57:[2,67],63:[2,67],64:[2,67],66:[2,67],67:[2,67],68:[2,67],69:[2,67],70:[2,67],71:[2,67],72:[2,67],73:[2,67],74:[2,67],75:[2,67],76:[2,67],79:[2,67],101:[2,67]},{5:[2,68],6:[2,68],12:[2,68],22:[2,68],34:[2,68],35:[2,68],37:[2,68],41:[2,68],57:[2,68],63:[2,68],64:[2,68],66:[2,68],67:[2,68],68:[2,68],69:[2,68],70:[2,68],71:[2,68],72:[2,68],73:[2,68],74:[2,68],75:[2,68],76:[2,68],79:[2,68],101:[2,68]},{5:[2,69],6:[2,69],12:[2,69],22:[2,69],34:[2,69],35:[2,69],37:[2,69],41:[2,69],57:[2,69],63:[2,69],64:[2,69],66:[2,69],67:[2,69],68:[2,69],69:[2,69],70:[2,69],71:[2,69],72:[2,69],73:[2,69],74:[2,69],75:[2,69],76:[2,69],79:[2,69],101:[2,69]},{5:[2,70],6:[2,70],12:[2,70],22:[2,70],34:[2,70],35:[2,70],37:[2,70],41:[2,70],57:[2,70],63:[2,70],64:[2,70],66:[2,70],67:[2,70],68:[2,70],69:[2,70],70:[2,70],71:[2,70],72:[2,70],73:[2,70],74:[2,70],75:[2,70],76:[2,70],79:[2,70],101:[2,70]},{5:[2,71],6:[2,71],12:[2,71],22:[2,71],34:[2,71],35:[2,71],37:[2,71],41:[2,71],57:[2,71],63:[2,71],64:[2,71],66:[2,71],67:[2,71],68:[2,71],69:[2,71],70:[2,71],71:[2,71],72:[2,71],73:[2,71],74:[2,71],75:[2,71],76:[2,71],79:[2,71],101:[2,71]},{5:[2,72],6:[2,72],12:[2,72],22:[2,72],34:[2,72],35:[2,72],37:[2,72],41:[2,72],57:[2,72],63:[2,72],64:[2,72],66:[2,72],67:[2,72],68:[2,72],69:[2,72],70:[2,72],71:[2,72],72:[2,72],73:[2,72],74:[2,72],75:[2,72],76:[2,72],79:[2,72],101:[2,72]},{5:[2,73],6:[2,73],12:[2,73],22:[2,73],34:[2,73],35:[2,73],37:[2,73],41:[2,73],57:[2,73],63:[2,73],64:[2,73],66:[2,73],67:[2,73],68:[2,73],69:[2,73],70:[2,73],71:[2,73],72:[2,73],73:[2,73],74:[2,73],75:[2,73],76:[2,73],79:[2,73],101:[2,73]},{5:[2,74],6:[2,74],12:[2,74],22:[2,74],34:[2,74],35:[2,74],37:[2,74],41:[2,74],57:[2,74],63:[2,74],64:[2,74],66:[2,74],67:[2,74],68:[2,74],69:[2,74],70:[2,74],71:[2,74],72:[2,74],73:[2,74],74:[2,74],75:[2,74],76:[2,74],79:[2,74],101:[2,74]},{5:[2,75],6:[2,75],12:[2,75],22:[2,75],34:[2,75],35:[2,75],37:[2,75],41:[2,75],57:[2,75],63:[2,75],64:[2,75],66:[2,75],67:[2,75],68:[2,75],69:[2,75],70:[2,75],71:[2,75],72:[2,75],73:[2,75],74:[2,75],75:[2,75],76:[2,75],79:[2,75],101:[2,75]},{5:[2,76],6:[2,76],12:[2,76],22:[2,76],34:[2,76],35:[2,76],37:[2,76],41:[2,76],57:[2,76],63:[2,76],64:[2,76],66:[2,76],67:[2,76],68:[2,76],69:[2,76],70:[2,76],71:[2,76],72:[2,76],73:[2,76],74:[2,76],75:[2,76],76:[2,76],79:[2,76],101:[2,76]},{5:[2,77],6:[2,77],12:[2,77],22:[2,77],34:[2,77],35:[2,77],37:[2,77],41:[2,77],57:[2,77],63:[2,77],64:[2,77],66:[2,77],67:[2,77],68:[2,77],69:[2,77],70:[2,77],71:[2,77],72:[2,77],73:[2,77],74:[2,77],75:[2,77],76:[2,77],79:[2,77],101:[2,77]},{5:[2,78],6:[2,78],12:[2,78],22:[2,78],34:[2,78],35:[2,78],37:[2,78],41:[2,78],57:[2,78],63:[2,78],64:[2,78],66:[2,78],67:[2,78],68:[2,78],69:[2,78],70:[2,78],71:[2,78],72:[2,78],73:[2,78],74:[2,78],75:[2,78],76:[2,78],79:[2,78],101:[2,78]},{5:[2,79],6:[2,79],12:[2,79],22:[2,79],34:[2,79],35:[2,79],37:[2,79],41:[2,79],57:[2,79],63:[2,79],64:[2,79],66:[2,79],67:[2,79],68:[2,79],69:[2,79],70:[2,79],71:[2,79],72:[2,79],73:[2,79],74:[2,79],75:[2,79],76:[2,79],79:[2,79],101:[2,79]},{5:[2,80],6:[2,80],12:[2,80],22:[2,80],34:[2,80],35:[2,80],37:[2,80],41:[2,80],57:[2,80],63:[2,80],64:[2,80],66:[2,80],67:[2,80],68:[2,80],69:[2,80],70:[2,80],71:[2,80],72:[2,80],73:[2,80],74:[2,80],75:[2,80],76:[2,80],79:[2,80],101:[2,80]},{5:[2,81],6:[2,81],12:[2,81],22:[2,81],34:[2,81],35:[2,81],37:[2,81],41:[2,81],57:[2,81],63:[2,81],64:[2,81],66:[2,81],67:[2,81],68:[2,81],69:[2,81],70:[2,81],71:[2,81],72:[2,81],73:[2,81],74:[2,81],75:[2,81],76:[2,81],79:[2,81],101:[2,81]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:260,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{5:[2,83],6:[2,83],12:[2,83],22:[2,83],34:[2,83],35:[2,83],37:[2,83],41:[2,83],57:[2,83],63:[2,83],64:[2,83],66:[2,83],67:[2,83],68:[2,83],69:[2,83],70:[2,83],71:[2,83],72:[2,83],73:[2,83],74:[2,83],75:[2,83],76:[2,83],79:[2,83],101:[2,83]},{5:[2,84],6:[2,84],12:[2,84],22:[2,84],34:[2,84],35:[2,84],37:[2,84],41:[2,84],57:[2,84],63:[2,84],64:[2,84],66:[2,84],67:[2,84],68:[2,84],69:[2,84],70:[2,84],71:[2,84],72:[2,84],73:[2,84],74:[2,84],75:[2,84],76:[2,84],79:[2,84],101:[2,84]},{5:[2,85],6:[2,85],12:[2,85],22:[2,85],34:[2,85],35:[2,85],37:[2,85],41:[2,85],57:[2,85],63:[2,85],64:[2,85],66:[2,85],67:[2,85],68:[2,85],69:[2,85],70:[2,85],71:[2,85],72:[2,85],73:[2,85],74:[2,85],75:[2,85],76:[2,85],79:[2,85],101:[2,85]},{5:[2,118],6:[2,118],12:[2,118],22:[2,118]},{5:[2,107],6:[2,107],12:[2,107]},{5:[2,67],6:[2,67],28:[1,261],63:[2,67],64:[2,67],66:[2,67],67:[2,67],68:[2,67],69:[2,67],70:[2,67],71:[2,67],72:[2,67],73:[2,67],74:[2,67],75:[2,67],76:[2,67]},{5:[2,44],6:[2,44],12:[1,154]},{7:[2,95],21:[2,95],26:[2,95],27:[2,95],46:[2,95],65:[2,95],73:[2,95],80:[2,95],81:[2,95],82:[2,95],83:[2,95],84:[2,95],85:[2,95],86:[2,95],87:[2,95],88:[2,95],89:[2,95],90:[2,95],91:[2,95],92:[2,95],93:[2,95],94:[2,95],95:[2,95],96:[2,95],98:[2,95]},{12:[2,103],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127],79:[2,103]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:262,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{5:[2,101],6:[2,101],12:[2,101],22:[2,101],79:[2,101]},{5:[2,26],6:[2,26],35:[1,263],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127]},{12:[1,264],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127]},{7:[2,97],21:[2,97],26:[2,97],27:[2,97],46:[2,97],65:[2,97],73:[2,97],80:[2,97],81:[2,97],82:[2,97],83:[2,97],84:[2,97],85:[2,97],86:[2,97],87:[2,97],88:[2,97],89:[2,97],90:[2,97],91:[2,97],92:[2,97],93:[2,97],94:[2,97],95:[2,97],96:[2,97],98:[2,97]},{5:[2,23],6:[2,23],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127]},{7:[1,265]},{7:[1,43],21:[1,55],26:[1,57],27:[1,56],29:266,46:[1,44],65:[1,53],73:[1,54],80:[1,58],81:[1,59],82:[1,60],83:[1,61],84:[1,62],85:[1,63],86:[1,64],87:[1,65],88:[1,66],89:[1,67],90:[1,68],91:[1,69],92:[1,70],93:[1,71],94:[1,72],95:[1,73],96:[1,74],97:75,98:[1,45]},{5:[2,27],6:[2,27]},{22:[1,267],63:[1,115],64:[1,116],66:[1,117],67:[1,118],68:[1,119],69:[1,120],70:[1,121],71:[1,122],72:[1,123],73:[1,124],74:[1,125],75:[1,126],76:[1,127]},{5:[2,82],6:[2,82],12:[2,82],22:[2,82],34:[2,82],35:[2,82],37:[2,82],41:[2,82],57:[2,82],63:[2,82],64:[2,82],66:[2,82],67:[2,82],68:[2,82],69:[2,82],70:[2,82],71:[2,82],72:[2,82],73:[2,82],74:[2,82],75:[2,82],76:[2,82],79:[2,82],101:[2,82]}],
defaultActions: {},
parseError: function parseError(str, hash) {
    if (hash.recoverable) {
        this.trace(str);
    } else {
        throw new Error(str);
    }
},
parse: function parse(input) {
    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    var args = lstack.slice.call(arguments, 1);
    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == 'undefined') {
        this.lexer.yylloc = {};
    }
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);
    var ranges = this.lexer.options && this.lexer.options.ranges;
    if (typeof this.yy.parseError === 'function') {
        this.parseError = this.yy.parseError;
    } else {
        this.parseError = Object.getPrototypeOf(this).parseError;
    }
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    function lex() {
        var token;
        token = self.lexer.lex() || EOF;
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == 'undefined') {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
                    if (typeof action === 'undefined' || !action.length || !action[0]) {
                var errStr = '';
                expected = [];
                for (p in table[state]) {
                    if (this.terminals_[p] && p > TERROR) {
                        expected.push('\'' + this.terminals_[p] + '\'');
                    }
                }
                if (this.lexer.showPosition) {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\n' + this.lexer.showPosition() + '\nExpecting ' + expected.join(', ') + ', got \'' + (this.terminals_[symbol] || symbol) + '\'';
                } else {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\'' + (this.terminals_[symbol] || symbol) + '\'');
                }
                this.parseError(errStr, {
                    text: this.lexer.match,
                    token: this.terminals_[symbol] || symbol,
                    line: this.lexer.yylineno,
                    loc: yyloc,
                    expected: expected
                });
            }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(this.lexer.yytext);
            lstack.push(this.lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                if (recovering > 0) {
                    recovering--;
                }
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {
                first_line: lstack[lstack.length - (len || 1)].first_line,
                last_line: lstack[lstack.length - 1].last_line,
                first_column: lstack[lstack.length - (len || 1)].first_column,
                last_column: lstack[lstack.length - 1].last_column
            };
            if (ranges) {
                yyval._$.range = [
                    lstack[lstack.length - (len || 1)].range[0],
                    lstack[lstack.length - 1].range[1]
                ];
            }
            r = this.performAction.apply(yyval, [
                yytext,
                yyleng,
                yylineno,
                this.yy,
                action[1],
                vstack,
                lstack
            ].concat(args));
            if (typeof r !== 'undefined') {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}};
/* generated by jison-lex 0.2.1 */
var lexer = (function(){
var lexer = {

EOF:1,

parseError:function parseError(str, hash) {
        if (this.yy.parser) {
            this.yy.parser.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },

// resets the lexer, sets new input
setInput:function (input) {
        this._input = input;
        this._more = this._backtrack = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {
            first_line: 1,
            first_column: 0,
            last_line: 1,
            last_column: 0
        };
        if (this.options.ranges) {
            this.yylloc.range = [0,0];
        }
        this.offset = 0;
        return this;
    },

// consumes and returns one char from the input
input:function () {
        var ch = this._input[0];
        this.yytext += ch;
        this.yyleng++;
        this.offset++;
        this.match += ch;
        this.matched += ch;
        var lines = ch.match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
        } else {
            this.yylloc.last_column++;
        }
        if (this.options.ranges) {
            this.yylloc.range[1]++;
        }

        this._input = this._input.slice(1);
        return ch;
    },

// unshifts one char (or a string) into the input
unput:function (ch) {
        var len = ch.length;
        var lines = ch.split(/(?:\r\n?|\n)/g);

        this._input = ch + this._input;
        this.yytext = this.yytext.substr(0, this.yytext.length - len - 1);
        //this.yyleng -= len;
        this.offset -= len;
        var oldLines = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length - 1);
        this.matched = this.matched.substr(0, this.matched.length - 1);

        if (lines.length - 1) {
            this.yylineno -= lines.length - 1;
        }
        var r = this.yylloc.range;

        this.yylloc = {
            first_line: this.yylloc.first_line,
            last_line: this.yylineno + 1,
            first_column: this.yylloc.first_column,
            last_column: lines ?
                (lines.length === oldLines.length ? this.yylloc.first_column : 0)
                 + oldLines[oldLines.length - lines.length].length - lines[0].length :
              this.yylloc.first_column - len
        };

        if (this.options.ranges) {
            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
        }
        this.yyleng = this.yytext.length;
        return this;
    },

// When called from action, caches matched text and appends it on next action
more:function () {
        this._more = true;
        return this;
    },

// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.
reject:function () {
        if (this.options.backtrack_lexer) {
            this._backtrack = true;
        } else {
            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n' + this.showPosition(), {
                text: "",
                token: null,
                line: this.yylineno
            });

        }
        return this;
    },

// retain first n characters of the match
less:function (n) {
        this.unput(this.match.slice(n));
    },

// displays already matched input, i.e. for error messages
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },

// displays upcoming input, i.e. for error messages
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\n/g, "");
    },

// displays the character position where the lexing error occurred, i.e. for error messages
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c + "^";
    },

// test the lexed token: return FALSE when not a match, otherwise return token
test_match:function (match, indexed_rule) {
        var token,
            lines,
            backup;

        if (this.options.backtrack_lexer) {
            // save context
            backup = {
                yylineno: this.yylineno,
                yylloc: {
                    first_line: this.yylloc.first_line,
                    last_line: this.last_line,
                    first_column: this.yylloc.first_column,
                    last_column: this.yylloc.last_column
                },
                yytext: this.yytext,
                match: this.match,
                matches: this.matches,
                matched: this.matched,
                yyleng: this.yyleng,
                offset: this.offset,
                _more: this._more,
                _input: this._input,
                yy: this.yy,
                conditionStack: this.conditionStack.slice(0),
                done: this.done
            };
            if (this.options.ranges) {
                backup.yylloc.range = this.yylloc.range.slice(0);
            }
        }

        lines = match[0].match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno += lines.length;
        }
        this.yylloc = {
            first_line: this.yylloc.last_line,
            last_line: this.yylineno + 1,
            first_column: this.yylloc.last_column,
            last_column: lines ?
                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\r?\n?/)[0].length :
                         this.yylloc.last_column + match[0].length
        };
        this.yytext += match[0];
        this.match += match[0];
        this.matches = match;
        this.yyleng = this.yytext.length;
        if (this.options.ranges) {
            this.yylloc.range = [this.offset, this.offset += this.yyleng];
        }
        this._more = false;
        this._backtrack = false;
        this._input = this._input.slice(match[0].length);
        this.matched += match[0];
        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);
        if (this.done && this._input) {
            this.done = false;
        }
        if (token) {
            return token;
        } else if (this._backtrack) {
            // recover context
            for (var k in backup) {
                this[k] = backup[k];
            }
            return false; // rule action called reject() implying the next rule should be tested instead.
        }
        return false;
    },

// return next match in input
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) {
            this.done = true;
        }

        var token,
            match,
            tempMatch,
            index;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i = 0; i < rules.length; i++) {
            tempMatch = this._input.match(this.rules[rules[i]]);
            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                match = tempMatch;
                index = i;
                if (this.options.backtrack_lexer) {
                    token = this.test_match(tempMatch, rules[i]);
                    if (token !== false) {
                        return token;
                    } else if (this._backtrack) {
                        match = false;
                        continue; // rule action called reject() implying a rule MISmatch.
                    } else {
                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
                        return false;
                    }
                } else if (!this.options.flex) {
                    break;
                }
            }
        }
        if (match) {
            token = this.test_match(match, rules[index]);
            if (token !== false) {
                return token;
            }
            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
            return false;
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\n' + this.showPosition(), {
                text: "",
                token: null,
                line: this.yylineno
            });
        }
    },

// return next match that has a token
lex:function lex() {
        var r = this.next();
        if (r) {
            return r;
        } else {
            return this.lex();
        }
    },

// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)
begin:function begin(condition) {
        this.conditionStack.push(condition);
    },

// pop the previously active lexer condition state off the condition stack
popState:function popState() {
        var n = this.conditionStack.length - 1;
        if (n > 0) {
            return this.conditionStack.pop();
        } else {
            return this.conditionStack[0];
        }
    },

// produce the lexer rule set which is active for the currently active lexer condition state
_currentRules:function _currentRules() {
        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {
            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
        } else {
            return this.conditions["INITIAL"].rules;
        }
    },

// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available
topState:function topState(n) {
        n = this.conditionStack.length - 1 - Math.abs(n || 0);
        if (n >= 0) {
            return this.conditionStack[n];
        } else {
            return "INITIAL";
        }
    },

// alias for begin(condition)
pushState:function pushState(condition) {
        this.begin(condition);
    },

// return the number of states currently on the stack
stateStackSize:function stateStackSize() {
        return this.conditionStack.length;
    },
options: {},
performAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {

var YYSTATE=YY_START;
switch($avoiding_name_collisions) {
case 0:return 6;
break;
case 1:/* skip whitespace */;
break;
case 2:return 74;
break;
case 3:return 75;
break;
case 4:return 73;
break;
case 5:return 72;
break;
case 6:return 76;
break;
case 7:return 66;
break;
case 8:return 28;
break;
case 9:return 67;
break;
case 10:return 71;
break;
case 11:return 69;
break;
case 12:return 70;
break;
case 13:return 68;
break;
case 14:return 64;
break;
case 15:return 63;
break;
case 16:return 65;
break;
case 17:return 21;
break;
case 18:return 22;
break;
case 19:return 77;
break;
case 20:return 79;
break;
case 21:return 12;
break;
case 22:return 101;
break;
case 23:return 57;
break;
case 24:return 80;
break;
case 25:return 81;
break;
case 26:return 82;
break;
case 27:return 83;
break;
case 28:return 84;
break;
case 29:return 87;
break;
case 30:return 88;
break;
case 31:return 89;
break;
case 32:return 90;
break;
case 33:return 92;
break;
case 34:return 93;
break;
case 35:return 94;
break;
case 36:return 95;
break;
case 37:return 96;
break;
case 38:return 10;
break;
case 39:return 11;
break;
case 40:return 13;
break;
case 41:return 15;
break;
case 42:return 17;
break;
case 43:return 18;
break;
case 44:return 19;
break;
case 45:return 20;
break;
case 46:return 23;
break;
case 47:return 25;
break;
case 48:return 30;
break;
case 49:return 32;
break;
case 50:return 26;
break;
case 51:return 33;
break;
case 52:return 39;
break;
case 53:return 36;
break;
case 54:return 40;
break;
case 55:return 42;
break;
case 56:return 44;
break;
case 57:return 47;
break;
case 58:return 49
break;
case 59:return 52;
break;
case 60:return 37;
break;
case 61:return 53;
break;
case 62:return 16;
break;
case 63:return 58;
break;
case 64:return 61;
break;
case 65:return 59;
break;
case 66:return 60
break;
case 67:return 62;
break;
case 68:return 41;
break;
case 69:return 34;
break;
case 70:return 56;
break;
case 71:return 50;
break;
case 72:return 51;
break;
case 73:return 98;
break;
case 74:return 7;
break;
case 75:return 46;
break;
case 76:return 14;
break;
case 77:return 27;
break;
case 78:return 5;
break;
case 79:return 'INVALID';
break;
}
},
rules: [/^(?:\n)/,/^(?:[\t ]+)/,/^(?:\*)/,/^(?:\/)/,/^(?:-)/,/^(?:\+)/,/^(?:\^)/,/^(?:==)/,/^(?:=)/,/^(?:<>)/,/^(?:<=)/,/^(?:>=)/,/^(?:<)/,/^(?:>)/,/^(?:AND\b)/,/^(?:OR\b)/,/^(?:NOT\b)/,/^(?:\()/,/^(?:\))/,/^(?:\[)/,/^(?:\])/,/^(?:,)/,/^(?::)/,/^(?:;)/,/^(?:ABS\b)/,/^(?:ATN\b)/,/^(?:COS\b)/,/^(?:EXP\b)/,/^(?:INT\b)/,/^(?:LOG\b)/,/^(?:RND\b)/,/^(?:SGN\b)/,/^(?:SIN\b)/,/^(?:SQR\b)/,/^(?:SUBSTR\b)/,/^(?:TAB\b)/,/^(?:TAN\b)/,/^(?:TIM\b)/,/^(?:CLS\b)/,/^(?:DEL\b)/,/^(?:GET\b)/,/^(?:LIST\b)/,/^(?:RUN\b)/,/^(?:SAVE\b)/,/^(?:SCR\b)/,/^(?:BASE\b)/,/^(?:DATA\b)/,/^(?:DEF\b)/,/^(?:DIM\b)/,/^(?:END\b)/,/^(?:FND\b)/,/^(?:FOR\b)/,/^(?:GOSUB\b)/,/^(?:GOTO\b)/,/^(?:IF\b)/,/^(?:IMAGE\b)/,/^(?:INPUT\b)/,/^(?:LET\b)/,/^(?:MAT\b)/,/^(?:NEXT\b)/,/^(?:OF\b)/,/^(?:PRINT\b)/,/^(?:PURGE\b)/,/^(?:RANDOMIZE\b)/,/^(?:REM.*)/,/^(?:READ\b)/,/^(?:RETURN\b)/,/^(?:STOP\b)/,/^(?:THEN\b)/,/^(?:TO\b)/,/^(?:USING\b)/,/^(?:ZER\b)/,/^(?:CON\b)/,/^(?:(([0-9])*\.([0-9])+))/,/^(?:(([0-9])+))/,/^(?:("[^"]*"))/,/^(?:('[A-Za-z][A-Za-z0-9_-]+'))/,/^(?:((([A-Z])([A-Z0-9])?)[$%]?))/,/^(?:$)/,/^(?:.)/],
conditions: {"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"inclusive":true}}
};
return lexer;
})();
parser.lexer = lexer;
function Parser () {
  this.yy = {};
}
Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();


if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = kc;
exports.Parser = kc.Parser;
exports.parse = function () { return kc.parse.apply(kc, arguments); };
exports.main = function commonjsMain(args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}
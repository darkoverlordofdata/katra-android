// Generated by CoffeeScript 1.6.3
var Console, FileSystem, MODE_REPL, MODE_RUN,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

MODE_REPL = 0;

MODE_RUN = 1;

window.rte = {
  Console: Console = (function() {
    Console.prototype.mode = MODE_REPL;

    Console.prototype.element = '';

    Console.prototype.console = null;

    Console.prototype.buffer = null;

    Console.prototype.vars = null;

    Console.prototype.animateScroll = true;

    Console.prototype.autofocus = true;

    Console.prototype.promptLabel = '';

    Console.prototype.promptHistory = true;

    Console.prototype.welcomeMessage = 'type RUN to start';

    function Console(element, $prompt) {
      this.element = element != null ? element : '.console';
      if ($prompt == null) {
        $prompt = '> ';
      }
      this.debug = __bind(this.debug, this);
      this.commandValidate = __bind(this.commandValidate, this);
      this.promptLabel = $prompt;
      this.clear();
    }

    Console.prototype.commandValidate = function($line) {
      if ($line === "") {
        return false;
      } else {
        return true;
      }
    };

    Console.prototype.input = function($prompt, $vars) {
      if ($prompt != null) {
        this.print($prompt);
      }
      this.buffer = [];
      this.vars = $vars;
      return true;
    };

    Console.prototype.debug = function($text) {
      return this.console.inner.append(String($text).replace(/\ /g, "&nbsp;") + "<br />");
    };

    Console.prototype.print = function($text) {
      return this.console.inner.append($text.replace(/\ /g, "&nbsp;"));
    };

    Console.prototype.println = function($text) {
      return this.console.inner.append($text.replace(/\ /g, "&nbsp;") + "<br />");
    };

    Console.prototype.clear = function() {
      $(this.element).html('');
      return this.console = $(this.element).console(this);
    };

    return Console;

  })(),
  FileSystem: FileSystem = (function() {
    var $loc;

    function FileSystem() {}

    $loc = '/katrac/bas/';

    FileSystem.prototype.readFile = function($filename, $next) {
      return $.get($loc + $filename.slice(1, -1) + '.bas', function($data) {
        return $next(null, $data);
      });
    };

    FileSystem.prototype.writeFile = function($filename, $data, $next) {};

    FileSystem.prototype.deleteFile = function($filename, $next) {};

    return FileSystem;

  })()
};

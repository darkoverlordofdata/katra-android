/* parser generated by jison 0.4.13 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var kc = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"Program":3,"Command":4,"NEWLINE":5,"EOF":6,"GET":7,"FILE":8,"Lines":9,"Line":10,"Statement":11,"INTEGER":12,"CLS":13,"DEL":14,",":15,"LIST":16,"PURGE":17,"QUIT":18,"RUN":19,"SAVE":20,"SCR":21,"TRACE":22,"ON":23,"OFF":24,"BASE":25,"(":26,")":27,"DATA":28,"ConstantList":29,"DEF":30,"FND":31,"VAR":32,"=":33,"Expression":34,"DIM":35,"DimList":36,"END":37,"FOR":38,"TO":39,"STEP":40,"GO":41,"GOTO":42,"OF":43,"IntegerList":44,"GOSUB":45,"IF":46,"THEN":47,"IMAGE":48,"ImageList":49,"INPUT":50,"VarList":51,"STRING":52,"LET":53,"LetList":54,"MAT":55,"ZER":56,"CON":57,"NEXT":58,"PRINT":59,"PrintList":60,"PrintSep":61,"USING":62,";":63,"RANDOMIZE":64,"READ":65,"RESTORE":66,"RETURN":67,"REM":68,"STOP":69,"OR":70,"AND":71,"NOT":72,"EQ":73,"NE":74,">":75,"GE":76,"<":77,"LE":78,"+":79,"-":80,"*":81,"/":82,"^":83,"[":84,"ExpressionList":85,"]":86,"ABS":87,"ATN":88,"COS":89,"EXP":90,"INT":91,"LEN":92,"LIN":93,"LOG":94,"RND":95,"SGN":96,"SIN":97,"SPA":98,"SQR":99,"SUBSTR":100,"TAB":101,"TAN":102,"TIM":103,"Constant":104,"NUMBER":105,"Dim":106,"VarItem":107,"ImageItem":108,"ImageMask":109,"ImageMaskItem":110,"$accept":0,"$end":1},
terminals_: {2:"error",5:"NEWLINE",6:"EOF",7:"GET",8:"FILE",12:"INTEGER",13:"CLS",14:"DEL",15:",",16:"LIST",17:"PURGE",18:"QUIT",19:"RUN",20:"SAVE",21:"SCR",22:"TRACE",23:"ON",24:"OFF",25:"BASE",26:"(",27:")",28:"DATA",30:"DEF",31:"FND",32:"VAR",33:"=",35:"DIM",37:"END",38:"FOR",39:"TO",40:"STEP",41:"GO",42:"GOTO",43:"OF",45:"GOSUB",46:"IF",47:"THEN",48:"IMAGE",50:"INPUT",52:"STRING",53:"LET",55:"MAT",56:"ZER",57:"CON",58:"NEXT",59:"PRINT",62:"USING",63:";",64:"RANDOMIZE",65:"READ",66:"RESTORE",67:"RETURN",68:"REM",69:"STOP",70:"OR",71:"AND",72:"NOT",73:"EQ",74:"NE",75:">",76:"GE",77:"<",78:"LE",79:"+",80:"-",81:"*",82:"/",83:"^",84:"[",86:"]",87:"ABS",88:"ATN",89:"COS",90:"EXP",91:"INT",92:"LEN",93:"LIN",94:"LOG",95:"RND",96:"SGN",97:"SIN",98:"SPA",99:"SQR",100:"SUBSTR",101:"TAB",102:"TAN",103:"TIM",105:"NUMBER"},
productions_: [0,[3,3],[3,2],[3,2],[9,3],[9,2],[9,1],[10,1],[10,2],[4,1],[4,4],[4,2],[4,1],[4,1],[4,4],[4,2],[4,1],[4,2],[4,1],[4,1],[4,2],[4,1],[4,2],[4,2],[11,4],[11,2],[11,7],[11,2],[11,1],[11,8],[11,6],[11,3],[11,2],[11,4],[11,2],[11,4],[11,2],[11,2],[11,4],[11,3],[11,2],[11,4],[11,4],[11,2],[11,3],[11,2],[11,1],[11,5],[11,3],[11,1],[11,2],[11,1],[11,1],[11,1],[11,1],[34,3],[34,3],[34,2],[34,3],[34,3],[34,3],[34,3],[34,3],[34,3],[34,3],[34,3],[34,3],[34,3],[34,3],[34,2],[34,3],[34,1],[34,4],[34,4],[34,4],[34,4],[34,4],[34,4],[34,4],[34,4],[34,4],[34,4],[34,4],[34,4],[34,4],[34,4],[34,4],[34,8],[34,4],[34,4],[34,4],[34,1],[104,1],[104,1],[104,1],[36,1],[36,3],[106,4],[106,4],[54,2],[54,5],[54,3],[54,6],[29,1],[29,3],[44,1],[44,3],[85,1],[85,3],[51,1],[51,3],[107,1],[107,4],[60,1],[60,3],[61,1],[61,1],[49,1],[49,3],[108,1],[108,1],[109,1],[109,4],[110,1],[110,2]],
performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
/* this == yyval */

var $0 = $$.length - 1;
switch (yystate) {
case 1:this.$ = new ast.Statement($$[$0-2]);
break;
case 2: cmd.get($$[$0]); return true;
break;
case 7:this.$ = new ast.Statement($$[$0]);
break;
case 8:this.$ = new ast.Statement($$[$0], $$[$0-1]);
break;
case 9:this.$ = cmd.cls();
break;
case 10:this.$ = cmd.del($$[$0-2], $$[$0]);
break;
case 11:this.$ = cmd.del($$[$0]);
break;
case 12:this.$ = cmd.del();
break;
case 13:this.$ = cmd.del($$[$0]);
break;
case 14:this.$ = cmd.list($$[$0-2], $$[$0]);
break;
case 15:this.$ = cmd.list($$[$0]);
break;
case 16:this.$ = cmd.list();
break;
case 17:this.$ = cmd.purge($$[$0]);
break;
case 18:this.$ = cmd.quit();
break;
case 19:this.$ = cmd.run();
break;
case 20:this.$ = cmd.save($$[$0]);
break;
case 21:this.$ = cmd.scr();
break;
case 22:this.$ = cmd.trace(true);
break;
case 23:this.$ = cmd.trace(false);
break;
case 24:this.$ = new ast.Base($$[$0-1]);
break;
case 25:this.$ = new ast.Data($$[$0]);
break;
case 26:this.$ = new ast.Def($$[$0-5], $$[$0-3], $$[$0]);
break;
case 27:this.$ = new ast.Dim($$[$0]);
break;
case 28:this.$ = new ast.End();
break;
case 29:this.$ = new ast.For($$[$0-6], $$[$0-4], $$[$0-2], $$[$0]);
break;
case 30:this.$ = new ast.For($$[$0-4], $$[$0-2], $$[$0]);
break;
case 31:this.$ = new ast.Goto($$[$0]);
break;
case 32:this.$ = new ast.Goto($$[$0]);
break;
case 33:this.$ = new ast.Goto($$[$0-2], $$[$0]);
break;
case 34:this.$ = new ast.Gosub($$[$0]);
break;
case 35:this.$ = new ast.If($$[$0-2], $$[$0]);
break;
case 36:this.$ = new ast.Image($$[$0]);
break;
case 37:this.$ = new ast.Input($$[$0]);
break;
case 38:this.$ = new ast.Input($$[$0], $$[$0-2]);
break;
case 39:this.$ = new ast.Let($$[$0-1], $$[$0]);
break;
case 40:this.$ = new ast.Let($$[$0-1], $$[$0]);
break;
case 41:this.$ = new ast.Mat(new ast.Var($$[$0-2]), ast.Zer);
break;
case 42:this.$ = new ast.Mat(new ast.Var($$[$0-2]), ast.Con);
break;
case 43:this.$ = new ast.Next(new ast.Var($$[$0]));
break;
case 44:this.$ = new ast.Print($$[$0-1], $$[$0]);
break;
case 45:this.$ = new ast.Print($$[$0]);
break;
case 46:this.$ = new ast.Print(new ast.Const(''));
break;
case 47:this.$ = new ast.Using($$[$0-2], $$[$0]);
break;
case 48:this.$ = new ast.Using($$[$0]);
break;
case 49:this.$ = new ast.Randomize();
break;
case 50:this.$ = new ast.Read($$[$0]);
break;
case 51:this.$ = new ast.Restore();
break;
case 52:this.$ = new ast.Return();
break;
case 53:this.$ = new ast.Rem($$[$0]);
break;
case 54:this.$ = new ast.Stop();
break;
case 55:this.$ = new ast.OR($$[$0-2], $$[$0]);
break;
case 56:this.$ = new ast.AND($$[$0-2], $$[$0]);
break;
case 57:this.$ = new ast.NOT($$[$0]);
break;
case 58:this.$ = new ast.EQ($$[$0-2], $$[$0]);
break;
case 59:this.$ = new ast.NE($$[$0-2], $$[$0]);
break;
case 60:this.$ = new ast.GT($$[$0-2], $$[$0]);
break;
case 61:this.$ = new ast.GE($$[$0-2], $$[$0]);
break;
case 62:this.$ = new ast.LT($$[$0-2], $$[$0]);
break;
case 63:this.$ = new ast.LE($$[$0-2], $$[$0]);
break;
case 64:this.$ = new ast.Add($$[$0-2], $$[$0]);
break;
case 65:this.$ = new ast.Sub($$[$0-2], $$[$0]);
break;
case 66:this.$ = new ast.Mul($$[$0-2], $$[$0]);
break;
case 67:this.$ = new ast.Div($$[$0-2], $$[$0]);
break;
case 68:this.$ = new ast.Pow($$[$0-2], $$[$0]);
break;
case 69:this.$ = -$$[$0];
break;
case 70:this.$ = $$[$0-1];
break;
case 71:this.$ = new ast.Var($$[$0]);
break;
case 72:this.$ = new ast.Var($$[$0-3], $$[$0-2], $$[$0-1]);
break;
case 73:this.$ = new ast.FN($$[$0-3], $$[$0-1]);
break;
case 74:this.$ = new ast.ABS($$[$0-1]);
break;
case 75:this.$ = new ast.ATN($$[$0-1]);
break;
case 76:this.$ = new ast.COS($$[$0-1]);
break;
case 77:this.$ = new ast.EXP($$[$0-1]);
break;
case 78:this.$ = new ast.INT($$[$0-1]);
break;
case 79:this.$ = new ast.LEN($$[$0-1]);
break;
case 80:this.$ = new ast.LIN($$[$0-1]);
break;
case 81:this.$ = new ast.LOG($$[$0-1]);
break;
case 82:this.$ = new ast.RND($$[$0-1]);
break;
case 83:this.$ = new ast.SGN($$[$0-1]);
break;
case 84:this.$ = new ast.SIN($$[$0-1]);
break;
case 85:this.$ = new ast.SPA($$[$0-1]);
break;
case 86:this.$ = new ast.SQR($$[$0-1]);
break;
case 87:this.$ = new ast.SUBSTR($$[$0-5], $$[$0-3], $$[$0-1]);
break;
case 88:this.$ = new ast.TAB($$[$0-1]);
break;
case 89:this.$ = new ast.TAN($$[$0-1]);
break;
case 90:this.$ = new ast.TIM($$[$0-1]);
break;
case 91:this.$ = $$[$0];
break;
case 92:this.$ = new ast.Const(parseInt($$[$0], 10));
break;
case 93:this.$ = new ast.Const($$[$0]);
break;
case 94:this.$ = new ast.Const(Number($$[$0]));
break;
case 95:this.$ = [$$[$0]];
break;
case 96:this.$ = [$$[$0-2], $$[$0]];
break;
case 97:this.$ = new ast.Var($$[$0-3], $$[$0-2], $$[$0-1]);
break;
case 98:this.$ = new ast.Var($$[$0-3], $$[$0-2], $$[$0-1]);
break;
case 99:this.$ = [$$[$0-1]];
break;
case 100:this.$ = [new ast.Var($$[$0-4], $$[$0-3], $$[$0-2])];
break;
case 101:this.$ = [$$[$0-2], $$[$0-1]];
break;
case 102:this.$ = [$$[$0-5], new ast.Var($$[$0-4], $$[$0-3], $$[$0-2])];
break;
case 103:this.$ = [$$[$0]];
break;
case 104:this.$ = [$$[$0-2], $$[$0]];
break;
case 105:this.$ = [parseInt($$[$0], 10)];
break;
case 106:this.$ = [$$[$0-2], parseInt($$[$0], 10)];
break;
case 107:this.$ = [$$[$0]];
break;
case 108:this.$ = [$$[$0-2], $$[$0]];
break;
case 109:this.$ = [$$[$0]];
break;
case 110:this.$ = [$$[$0-2], $$[$0]];
break;
case 111:this.$ = new ast.Var($$[$0]);
break;
case 112:this.$ = new ast.Var($$[$0-3], $$[$0-2], $$[$0-1]);
break;
case 113:this.$ = [$$[$0]];
break;
case 114:this.$ = [$$[$0-2], $$[$0-1], $$[$0]];
break;
case 115:this.$ = ast.Semic;
break;
case 116:this.$ = ast.Comma;
break;
case 117:this.$ = [$$[$0]];
break;
case 118:this.$ = [$$[$0-2], $$[$0-1], $$[$0]];
break;
case 119:this.$ = $$[$0];
break;
case 120:this.$ = $$[$0];
break;
case 121:this.$ = [$$[$0]];
break;
case 122:this.$ = [parseInt($$[$0-3], 10), $$[$0-2], $$[$0-1], $$[$0]];
break;
case 123:this.$ = [$$[$0]];
break;
case 124:this.$ = [parseInt($$[$0-1], 10), $$[$0]];
break;
}
},
table: [{3:1,4:2,5:[1,16],7:[1,3],9:4,10:15,11:17,12:[1,7],13:[1,5],14:[1,6],16:[1,8],17:[1,9],18:[1,10],19:[1,11],20:[1,12],21:[1,13],22:[1,14],25:[1,18],28:[1,19],30:[1,20],32:[1,41],35:[1,21],37:[1,22],38:[1,23],41:[1,24],42:[1,25],45:[1,26],46:[1,27],48:[1,28],50:[1,29],53:[1,30],54:31,55:[1,32],58:[1,33],59:[1,34],64:[1,35],65:[1,36],66:[1,37],67:[1,38],68:[1,39],69:[1,40]},{1:[3]},{5:[1,42]},{8:[1,43]},{6:[1,44],10:45,11:17,12:[1,46],25:[1,18],28:[1,19],30:[1,20],32:[1,41],35:[1,21],37:[1,22],38:[1,23],41:[1,24],42:[1,25],45:[1,26],46:[1,27],48:[1,28],50:[1,29],53:[1,30],54:31,55:[1,32],58:[1,33],59:[1,34],64:[1,35],65:[1,36],66:[1,37],67:[1,38],68:[1,39],69:[1,40]},{5:[2,9]},{5:[2,12],12:[1,47]},{5:[2,13],11:48,25:[1,18],28:[1,19],30:[1,20],32:[1,41],35:[1,21],37:[1,22],38:[1,23],41:[1,24],42:[1,25],45:[1,26],46:[1,27],48:[1,28],50:[1,29],53:[1,30],54:31,55:[1,32],58:[1,33],59:[1,34],64:[1,35],65:[1,36],66:[1,37],67:[1,38],68:[1,39],69:[1,40]},{5:[2,16],12:[1,49]},{8:[1,50]},{5:[2,18]},{5:[2,19]},{8:[1,51]},{5:[2,21]},{23:[1,52],24:[1,53]},{5:[1,54]},{6:[2,6],12:[2,6],25:[2,6],28:[2,6],30:[2,6],32:[2,6],35:[2,6],37:[2,6],38:[2,6],41:[2,6],42:[2,6],45:[2,6],46:[2,6],48:[2,6],50:[2,6],53:[2,6],55:[2,6],58:[2,6],59:[2,6],64:[2,6],65:[2,6],66:[2,6],67:[2,6],68:[2,6],69:[2,6]},{5:[2,7]},{26:[1,55]},{12:[1,58],29:56,52:[1,59],104:57,105:[1,60]},{31:[1,61]},{32:[1,64],36:62,106:63},{5:[2,28]},{32:[1,65]},{39:[1,66]},{12:[1,67],26:[1,71],31:[1,73],32:[1,72],34:68,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,92]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:93,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,99],32:[1,100],49:94,52:[1,96],108:95,109:97,110:98},{32:[1,104],51:101,52:[1,102],107:103},{32:[1,41],54:105},{12:[1,58],26:[1,71],31:[1,73],32:[1,107],34:106,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{32:[1,108]},{32:[1,109]},{5:[2,46],12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:112,52:[1,59],60:110,62:[1,111],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{5:[2,49]},{32:[1,104],51:113,107:103},{5:[2,51]},{5:[2,52]},{5:[2,53]},{5:[2,54]},{33:[1,114],84:[1,115]},{6:[1,116]},{1:[2,2]},{1:[2,3]},{5:[1,117]},{11:48,25:[1,18],28:[1,19],30:[1,20],32:[1,41],35:[1,21],37:[1,22],38:[1,23],41:[1,24],42:[1,25],45:[1,26],46:[1,27],48:[1,28],50:[1,29],53:[1,30],54:31,55:[1,32],58:[1,33],59:[1,34],64:[1,35],65:[1,36],66:[1,37],67:[1,38],68:[1,39],69:[1,40]},{5:[2,11],15:[1,118]},{5:[2,8]},{5:[2,15],15:[1,119]},{5:[2,17]},{5:[2,20]},{5:[2,22]},{5:[2,23]},{6:[2,5],12:[2,5],25:[2,5],28:[2,5],30:[2,5],32:[2,5],35:[2,5],37:[2,5],38:[2,5],41:[2,5],42:[2,5],45:[2,5],46:[2,5],48:[2,5],50:[2,5],53:[2,5],55:[2,5],58:[2,5],59:[2,5],64:[2,5],65:[2,5],66:[2,5],67:[2,5],68:[2,5],69:[2,5]},{12:[1,120]},{5:[2,25],15:[1,121]},{5:[2,103],15:[2,103]},{5:[2,92],15:[2,92],27:[2,92],39:[2,92],40:[2,92],43:[2,92],47:[2,92],63:[2,92],70:[2,92],71:[2,92],73:[2,92],74:[2,92],75:[2,92],76:[2,92],77:[2,92],78:[2,92],79:[2,92],80:[2,92],81:[2,92],82:[2,92],83:[2,92],86:[2,92]},{5:[2,93],15:[2,93],27:[2,93],39:[2,93],40:[2,93],43:[2,93],47:[2,93],63:[2,93],70:[2,93],71:[2,93],73:[2,93],74:[2,93],75:[2,93],76:[2,93],77:[2,93],78:[2,93],79:[2,93],80:[2,93],81:[2,93],82:[2,93],83:[2,93],86:[2,93]},{5:[2,94],15:[2,94],27:[2,94],39:[2,94],40:[2,94],43:[2,94],47:[2,94],63:[2,94],70:[2,94],71:[2,94],73:[2,94],74:[2,94],75:[2,94],76:[2,94],77:[2,94],78:[2,94],79:[2,94],80:[2,94],81:[2,94],82:[2,94],83:[2,94],86:[2,94]},{26:[1,122]},{5:[2,27],15:[1,123]},{5:[2,95],15:[2,95]},{26:[1,125],84:[1,124]},{33:[1,126]},{12:[1,127]},{5:[2,32],43:[2,92],70:[2,92],71:[2,92],73:[2,92],74:[2,92],75:[2,92],76:[2,92],77:[2,92],78:[2,92],79:[2,92],80:[2,92],81:[2,92],82:[2,92],83:[2,92]},{43:[1,128],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:142,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:143,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:144,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{5:[2,71],15:[2,71],27:[2,71],39:[2,71],40:[2,71],43:[2,71],47:[2,71],63:[2,71],70:[2,71],71:[2,71],73:[2,71],74:[2,71],75:[2,71],76:[2,71],77:[2,71],78:[2,71],79:[2,71],80:[2,71],81:[2,71],82:[2,71],83:[2,71],84:[1,145],86:[2,71]},{26:[1,146]},{26:[1,147]},{26:[1,148]},{26:[1,149]},{26:[1,150]},{26:[1,151]},{26:[1,152]},{26:[1,153]},{26:[1,154]},{26:[1,155]},{26:[1,156]},{26:[1,157]},{26:[1,158]},{26:[1,159]},{26:[1,160]},{26:[1,161]},{26:[1,162]},{26:[1,163]},{5:[2,91],15:[2,91],27:[2,91],39:[2,91],40:[2,91],43:[2,91],47:[2,91],63:[2,91],70:[2,91],71:[2,91],73:[2,91],74:[2,91],75:[2,91],76:[2,91],77:[2,91],78:[2,91],79:[2,91],80:[2,91],81:[2,91],82:[2,91],83:[2,91],86:[2,91]},{5:[2,34]},{47:[1,164],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{5:[2,36],15:[1,165]},{5:[2,117],15:[2,117],27:[2,117]},{5:[2,119],15:[2,119],27:[2,119]},{5:[2,120],15:[2,120],27:[2,120]},{5:[2,121],15:[2,121],27:[2,121]},{26:[1,166],32:[1,167]},{5:[2,123],15:[2,123],27:[2,123]},{5:[2,37],15:[1,168]},{15:[1,169]},{5:[2,109],15:[2,109]},{5:[2,111],15:[2,111],84:[1,170]},{12:[1,58],26:[1,71],31:[1,73],32:[1,107],34:171,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{5:[2,40],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{5:[2,71],33:[1,172],70:[2,71],71:[2,71],73:[2,71],74:[2,71],75:[2,71],76:[2,71],77:[2,71],78:[2,71],79:[2,71],80:[2,71],81:[2,71],82:[2,71],83:[2,71],84:[1,173]},{33:[1,174]},{5:[2,43]},{5:[2,45],15:[1,177],61:175,63:[1,176]},{12:[1,178]},{5:[2,113],15:[2,113],63:[2,113],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{5:[2,50],15:[1,168]},{12:[2,99],26:[2,99],31:[2,99],32:[2,99],52:[2,99],72:[2,99],80:[2,99],87:[2,99],88:[2,99],89:[2,99],90:[2,99],91:[2,99],92:[2,99],93:[2,99],94:[2,99],95:[2,99],96:[2,99],97:[2,99],98:[2,99],99:[2,99],100:[2,99],101:[2,99],102:[2,99],103:[2,99],105:[2,99]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:180,52:[1,59],72:[1,69],80:[1,70],85:179,87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{1:[2,1]},{6:[2,4],12:[2,4],25:[2,4],28:[2,4],30:[2,4],32:[2,4],35:[2,4],37:[2,4],38:[2,4],41:[2,4],42:[2,4],45:[2,4],46:[2,4],48:[2,4],50:[2,4],53:[2,4],55:[2,4],58:[2,4],59:[2,4],64:[2,4],65:[2,4],66:[2,4],67:[2,4],68:[2,4],69:[2,4]},{12:[1,181]},{12:[1,182]},{27:[1,183]},{12:[1,58],52:[1,59],104:184,105:[1,60]},{32:[1,185]},{32:[1,64],106:186},{12:[1,188],44:187},{12:[1,188],44:189},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:190,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{5:[2,31]},{12:[1,188],44:191},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:192,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:193,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:194,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:195,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:196,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:197,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:198,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:199,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:200,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:201,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:202,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:203,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:204,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{5:[2,57],15:[2,57],27:[2,57],39:[2,57],40:[2,57],43:[2,57],47:[2,57],63:[2,57],70:[2,57],71:[2,57],73:[2,57],74:[2,57],75:[2,57],76:[2,57],77:[2,57],78:[2,57],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141],86:[2,57]},{5:[2,69],15:[2,69],27:[2,69],39:[2,69],40:[2,69],43:[2,69],47:[2,69],63:[2,69],70:[2,69],71:[2,69],73:[2,69],74:[2,69],75:[2,69],76:[2,69],77:[2,69],78:[2,69],79:[2,69],80:[2,69],81:[2,69],82:[2,69],83:[2,69],86:[2,69]},{27:[1,205],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:180,52:[1,59],72:[1,69],80:[1,70],85:206,87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:207,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:208,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:209,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:210,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:211,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:212,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:213,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:214,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:215,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:216,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:217,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:218,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:219,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:220,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:221,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:222,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:223,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:224,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,225]},{12:[1,99],32:[1,100],52:[1,96],108:226,109:97,110:98},{12:[1,99],32:[1,100],49:227,52:[1,96],108:95,109:97,110:98},{5:[2,124],15:[2,124],27:[2,124]},{32:[1,104],107:228},{32:[1,104],51:229,107:103},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:180,52:[1,59],72:[1,69],80:[1,70],85:230,87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{5:[2,39],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{12:[2,101],26:[2,101],31:[2,101],32:[2,101],52:[2,101],72:[2,101],80:[2,101],87:[2,101],88:[2,101],89:[2,101],90:[2,101],91:[2,101],92:[2,101],93:[2,101],94:[2,101],95:[2,101],96:[2,101],97:[2,101],98:[2,101],99:[2,101],100:[2,101],101:[2,101],102:[2,101],103:[2,101],105:[2,101]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:180,52:[1,59],72:[1,69],80:[1,70],85:231,87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{56:[1,232],57:[1,233]},{5:[2,44],12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:234,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{5:[2,115],12:[2,115],26:[2,115],31:[2,115],32:[2,115],52:[2,115],72:[2,115],80:[2,115],87:[2,115],88:[2,115],89:[2,115],90:[2,115],91:[2,115],92:[2,115],93:[2,115],94:[2,115],95:[2,115],96:[2,115],97:[2,115],98:[2,115],99:[2,115],100:[2,115],101:[2,115],102:[2,115],103:[2,115],105:[2,115]},{5:[2,116],12:[2,116],26:[2,116],31:[2,116],32:[2,116],52:[2,116],72:[2,116],80:[2,116],87:[2,116],88:[2,116],89:[2,116],90:[2,116],91:[2,116],92:[2,116],93:[2,116],94:[2,116],95:[2,116],96:[2,116],97:[2,116],98:[2,116],99:[2,116],100:[2,116],101:[2,116],102:[2,116],103:[2,116],105:[2,116]},{5:[2,48],63:[1,235]},{15:[1,237],86:[1,236]},{15:[2,107],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141],86:[2,107]},{5:[2,10]},{5:[2,14]},{5:[2,24]},{5:[2,104],15:[2,104]},{27:[1,238]},{5:[2,96],15:[2,96]},{15:[1,240],86:[1,239]},{5:[2,105],15:[2,105],27:[2,105],86:[2,105]},{15:[1,240],27:[1,241]},{39:[1,242],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{5:[2,33],15:[1,240]},{5:[2,55],15:[2,55],27:[2,55],39:[2,55],40:[2,55],43:[2,55],47:[2,55],63:[2,55],70:[2,55],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141],86:[2,55]},{5:[2,56],15:[2,56],27:[2,56],39:[2,56],40:[2,56],43:[2,56],47:[2,56],63:[2,56],70:[2,56],71:[2,56],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141],86:[2,56]},{5:[2,58],15:[2,58],27:[2,58],39:[2,58],40:[2,58],43:[2,58],47:[2,58],63:[2,58],70:[2,58],71:[2,58],73:[2,58],74:[2,58],75:[2,58],76:[2,58],77:[2,58],78:[2,58],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141],86:[2,58]},{5:[2,59],15:[2,59],27:[2,59],39:[2,59],40:[2,59],43:[2,59],47:[2,59],63:[2,59],70:[2,59],71:[2,59],73:[2,59],74:[2,59],75:[2,59],76:[2,59],77:[2,59],78:[2,59],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141],86:[2,59]},{5:[2,60],15:[2,60],27:[2,60],39:[2,60],40:[2,60],43:[2,60],47:[2,60],63:[2,60],70:[2,60],71:[2,60],73:[2,60],74:[2,60],75:[2,60],76:[2,60],77:[2,60],78:[2,60],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141],86:[2,60]},{5:[2,61],15:[2,61],27:[2,61],39:[2,61],40:[2,61],43:[2,61],47:[2,61],63:[2,61],70:[2,61],71:[2,61],73:[2,61],74:[2,61],75:[2,61],76:[2,61],77:[2,61],78:[2,61],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141],86:[2,61]},{5:[2,62],15:[2,62],27:[2,62],39:[2,62],40:[2,62],43:[2,62],47:[2,62],63:[2,62],70:[2,62],71:[2,62],73:[2,62],74:[2,62],75:[2,62],76:[2,62],77:[2,62],78:[2,62],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141],86:[2,62]},{5:[2,63],15:[2,63],27:[2,63],39:[2,63],40:[2,63],43:[2,63],47:[2,63],63:[2,63],70:[2,63],71:[2,63],73:[2,63],74:[2,63],75:[2,63],76:[2,63],77:[2,63],78:[2,63],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141],86:[2,63]},{5:[2,64],15:[2,64],27:[2,64],39:[2,64],40:[2,64],43:[2,64],47:[2,64],63:[2,64],70:[2,64],71:[2,64],73:[2,64],74:[2,64],75:[2,64],76:[2,64],77:[2,64],78:[2,64],79:[2,64],80:[2,64],81:[1,139],82:[1,140],83:[1,141],86:[2,64]},{5:[2,65],15:[2,65],27:[2,65],39:[2,65],40:[2,65],43:[2,65],47:[2,65],63:[2,65],70:[2,65],71:[2,65],73:[2,65],74:[2,65],75:[2,65],76:[2,65],77:[2,65],78:[2,65],79:[2,65],80:[2,65],81:[1,139],82:[1,140],83:[1,141],86:[2,65]},{5:[2,66],15:[2,66],27:[2,66],39:[2,66],40:[2,66],43:[2,66],47:[2,66],63:[2,66],70:[2,66],71:[2,66],73:[2,66],74:[2,66],75:[2,66],76:[2,66],77:[2,66],78:[2,66],79:[2,66],80:[2,66],81:[2,66],82:[2,66],83:[1,141],86:[2,66]},{5:[2,67],15:[2,67],27:[2,67],39:[2,67],40:[2,67],43:[2,67],47:[2,67],63:[2,67],70:[2,67],71:[2,67],73:[2,67],74:[2,67],75:[2,67],76:[2,67],77:[2,67],78:[2,67],79:[2,67],80:[2,67],81:[2,67],82:[2,67],83:[1,141],86:[2,67]},{5:[2,68],15:[2,68],27:[2,68],39:[2,68],40:[2,68],43:[2,68],47:[2,68],63:[2,68],70:[2,68],71:[2,68],73:[2,68],74:[2,68],75:[2,68],76:[2,68],77:[2,68],78:[2,68],79:[2,68],80:[2,68],81:[2,68],82:[2,68],83:[2,68],86:[2,68]},{5:[2,70],15:[2,70],27:[2,70],39:[2,70],40:[2,70],43:[2,70],47:[2,70],63:[2,70],70:[2,70],71:[2,70],73:[2,70],74:[2,70],75:[2,70],76:[2,70],77:[2,70],78:[2,70],79:[2,70],80:[2,70],81:[2,70],82:[2,70],83:[2,70],86:[2,70]},{15:[1,237],86:[1,243]},{27:[1,244],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{27:[1,245],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{27:[1,246],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{27:[1,247],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{27:[1,248],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{27:[1,249],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{27:[1,250],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{27:[1,251],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{27:[1,252],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{27:[1,253],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{27:[1,254],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{27:[1,255],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{27:[1,256],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{27:[1,257],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{15:[1,258],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{27:[1,259],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{27:[1,260],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{27:[1,261],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{5:[2,35]},{5:[2,118],15:[2,118],27:[2,118]},{15:[1,165],27:[1,262]},{5:[2,110],15:[2,110]},{5:[2,38],15:[1,168]},{15:[1,237],86:[1,263]},{15:[1,237],86:[1,264]},{5:[2,41]},{5:[2,42]},{5:[2,114],15:[2,114],63:[2,114],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{32:[1,104],51:265,107:103},{33:[1,266]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:267,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{33:[1,268]},{5:[2,97],15:[2,97]},{12:[1,269]},{5:[2,98],15:[2,98]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:270,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{5:[2,72],15:[2,72],27:[2,72],39:[2,72],40:[2,72],43:[2,72],47:[2,72],63:[2,72],70:[2,72],71:[2,72],73:[2,72],74:[2,72],75:[2,72],76:[2,72],77:[2,72],78:[2,72],79:[2,72],80:[2,72],81:[2,72],82:[2,72],83:[2,72],86:[2,72]},{5:[2,73],15:[2,73],27:[2,73],39:[2,73],40:[2,73],43:[2,73],47:[2,73],63:[2,73],70:[2,73],71:[2,73],73:[2,73],74:[2,73],75:[2,73],76:[2,73],77:[2,73],78:[2,73],79:[2,73],80:[2,73],81:[2,73],82:[2,73],83:[2,73],86:[2,73]},{5:[2,74],15:[2,74],27:[2,74],39:[2,74],40:[2,74],43:[2,74],47:[2,74],63:[2,74],70:[2,74],71:[2,74],73:[2,74],74:[2,74],75:[2,74],76:[2,74],77:[2,74],78:[2,74],79:[2,74],80:[2,74],81:[2,74],82:[2,74],83:[2,74],86:[2,74]},{5:[2,75],15:[2,75],27:[2,75],39:[2,75],40:[2,75],43:[2,75],47:[2,75],63:[2,75],70:[2,75],71:[2,75],73:[2,75],74:[2,75],75:[2,75],76:[2,75],77:[2,75],78:[2,75],79:[2,75],80:[2,75],81:[2,75],82:[2,75],83:[2,75],86:[2,75]},{5:[2,76],15:[2,76],27:[2,76],39:[2,76],40:[2,76],43:[2,76],47:[2,76],63:[2,76],70:[2,76],71:[2,76],73:[2,76],74:[2,76],75:[2,76],76:[2,76],77:[2,76],78:[2,76],79:[2,76],80:[2,76],81:[2,76],82:[2,76],83:[2,76],86:[2,76]},{5:[2,77],15:[2,77],27:[2,77],39:[2,77],40:[2,77],43:[2,77],47:[2,77],63:[2,77],70:[2,77],71:[2,77],73:[2,77],74:[2,77],75:[2,77],76:[2,77],77:[2,77],78:[2,77],79:[2,77],80:[2,77],81:[2,77],82:[2,77],83:[2,77],86:[2,77]},{5:[2,78],15:[2,78],27:[2,78],39:[2,78],40:[2,78],43:[2,78],47:[2,78],63:[2,78],70:[2,78],71:[2,78],73:[2,78],74:[2,78],75:[2,78],76:[2,78],77:[2,78],78:[2,78],79:[2,78],80:[2,78],81:[2,78],82:[2,78],83:[2,78],86:[2,78]},{5:[2,79],15:[2,79],27:[2,79],39:[2,79],40:[2,79],43:[2,79],47:[2,79],63:[2,79],70:[2,79],71:[2,79],73:[2,79],74:[2,79],75:[2,79],76:[2,79],77:[2,79],78:[2,79],79:[2,79],80:[2,79],81:[2,79],82:[2,79],83:[2,79],86:[2,79]},{5:[2,80],15:[2,80],27:[2,80],39:[2,80],40:[2,80],43:[2,80],47:[2,80],63:[2,80],70:[2,80],71:[2,80],73:[2,80],74:[2,80],75:[2,80],76:[2,80],77:[2,80],78:[2,80],79:[2,80],80:[2,80],81:[2,80],82:[2,80],83:[2,80],86:[2,80]},{5:[2,81],15:[2,81],27:[2,81],39:[2,81],40:[2,81],43:[2,81],47:[2,81],63:[2,81],70:[2,81],71:[2,81],73:[2,81],74:[2,81],75:[2,81],76:[2,81],77:[2,81],78:[2,81],79:[2,81],80:[2,81],81:[2,81],82:[2,81],83:[2,81],86:[2,81]},{5:[2,82],15:[2,82],27:[2,82],39:[2,82],40:[2,82],43:[2,82],47:[2,82],63:[2,82],70:[2,82],71:[2,82],73:[2,82],74:[2,82],75:[2,82],76:[2,82],77:[2,82],78:[2,82],79:[2,82],80:[2,82],81:[2,82],82:[2,82],83:[2,82],86:[2,82]},{5:[2,83],15:[2,83],27:[2,83],39:[2,83],40:[2,83],43:[2,83],47:[2,83],63:[2,83],70:[2,83],71:[2,83],73:[2,83],74:[2,83],75:[2,83],76:[2,83],77:[2,83],78:[2,83],79:[2,83],80:[2,83],81:[2,83],82:[2,83],83:[2,83],86:[2,83]},{5:[2,84],15:[2,84],27:[2,84],39:[2,84],40:[2,84],43:[2,84],47:[2,84],63:[2,84],70:[2,84],71:[2,84],73:[2,84],74:[2,84],75:[2,84],76:[2,84],77:[2,84],78:[2,84],79:[2,84],80:[2,84],81:[2,84],82:[2,84],83:[2,84],86:[2,84]},{5:[2,85],15:[2,85],27:[2,85],39:[2,85],40:[2,85],43:[2,85],47:[2,85],63:[2,85],70:[2,85],71:[2,85],73:[2,85],74:[2,85],75:[2,85],76:[2,85],77:[2,85],78:[2,85],79:[2,85],80:[2,85],81:[2,85],82:[2,85],83:[2,85],86:[2,85]},{5:[2,86],15:[2,86],27:[2,86],39:[2,86],40:[2,86],43:[2,86],47:[2,86],63:[2,86],70:[2,86],71:[2,86],73:[2,86],74:[2,86],75:[2,86],76:[2,86],77:[2,86],78:[2,86],79:[2,86],80:[2,86],81:[2,86],82:[2,86],83:[2,86],86:[2,86]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:271,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{5:[2,88],15:[2,88],27:[2,88],39:[2,88],40:[2,88],43:[2,88],47:[2,88],63:[2,88],70:[2,88],71:[2,88],73:[2,88],74:[2,88],75:[2,88],76:[2,88],77:[2,88],78:[2,88],79:[2,88],80:[2,88],81:[2,88],82:[2,88],83:[2,88],86:[2,88]},{5:[2,89],15:[2,89],27:[2,89],39:[2,89],40:[2,89],43:[2,89],47:[2,89],63:[2,89],70:[2,89],71:[2,89],73:[2,89],74:[2,89],75:[2,89],76:[2,89],77:[2,89],78:[2,89],79:[2,89],80:[2,89],81:[2,89],82:[2,89],83:[2,89],86:[2,89]},{5:[2,90],15:[2,90],27:[2,90],39:[2,90],40:[2,90],43:[2,90],47:[2,90],63:[2,90],70:[2,90],71:[2,90],73:[2,90],74:[2,90],75:[2,90],76:[2,90],77:[2,90],78:[2,90],79:[2,90],80:[2,90],81:[2,90],82:[2,90],83:[2,90],86:[2,90]},{5:[2,122],15:[2,122],27:[2,122]},{5:[2,112],15:[2,112]},{5:[2,72],33:[1,272],70:[2,72],71:[2,72],73:[2,72],74:[2,72],75:[2,72],76:[2,72],77:[2,72],78:[2,72],79:[2,72],80:[2,72],81:[2,72],82:[2,72],83:[2,72]},{5:[2,47],15:[1,168]},{12:[2,100],26:[2,100],31:[2,100],32:[2,100],52:[2,100],72:[2,100],80:[2,100],87:[2,100],88:[2,100],89:[2,100],90:[2,100],91:[2,100],92:[2,100],93:[2,100],94:[2,100],95:[2,100],96:[2,100],97:[2,100],98:[2,100],99:[2,100],100:[2,100],101:[2,100],102:[2,100],103:[2,100],105:[2,100]},{15:[2,108],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141],86:[2,108]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:273,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{5:[2,106],15:[2,106],27:[2,106],86:[2,106]},{5:[2,30],40:[1,274],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{15:[1,275],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{12:[2,102],26:[2,102],31:[2,102],32:[2,102],52:[2,102],72:[2,102],80:[2,102],87:[2,102],88:[2,102],89:[2,102],90:[2,102],91:[2,102],92:[2,102],93:[2,102],94:[2,102],95:[2,102],96:[2,102],97:[2,102],98:[2,102],99:[2,102],100:[2,102],101:[2,102],102:[2,102],103:[2,102],105:[2,102]},{5:[2,26],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:276,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{12:[1,58],26:[1,71],31:[1,73],32:[1,72],34:277,52:[1,59],72:[1,69],80:[1,70],87:[1,74],88:[1,75],89:[1,76],90:[1,77],91:[1,78],92:[1,79],93:[1,80],94:[1,81],95:[1,82],96:[1,83],97:[1,84],98:[1,85],99:[1,86],100:[1,87],101:[1,88],102:[1,89],103:[1,90],104:91,105:[1,60]},{5:[2,29],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{27:[1,278],70:[1,129],71:[1,130],73:[1,131],74:[1,132],75:[1,133],76:[1,134],77:[1,135],78:[1,136],79:[1,137],80:[1,138],81:[1,139],82:[1,140],83:[1,141]},{5:[2,87],15:[2,87],27:[2,87],39:[2,87],40:[2,87],43:[2,87],47:[2,87],63:[2,87],70:[2,87],71:[2,87],73:[2,87],74:[2,87],75:[2,87],76:[2,87],77:[2,87],78:[2,87],79:[2,87],80:[2,87],81:[2,87],82:[2,87],83:[2,87],86:[2,87]}],
defaultActions: {5:[2,9],10:[2,18],11:[2,19],13:[2,21],17:[2,7],22:[2,28],35:[2,49],37:[2,51],38:[2,52],39:[2,53],40:[2,54],43:[2,2],44:[2,3],48:[2,8],50:[2,17],51:[2,20],52:[2,22],53:[2,23],92:[2,34],109:[2,43],116:[2,1],127:[2,31],181:[2,10],182:[2,14],183:[2,24],225:[2,35],232:[2,41],233:[2,42]},
parseError: function parseError(str, hash) {
    if (hash.recoverable) {
        this.trace(str);
    } else {
        throw new Error(str);
    }
},
parse: function parse(input) {
    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    var args = lstack.slice.call(arguments, 1);
    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == 'undefined') {
        this.lexer.yylloc = {};
    }
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);
    var ranges = this.lexer.options && this.lexer.options.ranges;
    if (typeof this.yy.parseError === 'function') {
        this.parseError = this.yy.parseError;
    } else {
        this.parseError = Object.getPrototypeOf(this).parseError;
    }
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    function lex() {
        var token;
        token = self.lexer.lex() || EOF;
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == 'undefined') {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
                    if (typeof action === 'undefined' || !action.length || !action[0]) {
                var errStr = '';
                expected = [];
                for (p in table[state]) {
                    if (this.terminals_[p] && p > TERROR) {
                        expected.push('\'' + this.terminals_[p] + '\'');
                    }
                }
                if (this.lexer.showPosition) {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\n' + this.lexer.showPosition() + '\nExpecting ' + expected.join(', ') + ', got \'' + (this.terminals_[symbol] || symbol) + '\'';
                } else {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\'' + (this.terminals_[symbol] || symbol) + '\'');
                }
                this.parseError(errStr, {
                    text: this.lexer.match,
                    token: this.terminals_[symbol] || symbol,
                    line: this.lexer.yylineno,
                    loc: yyloc,
                    expected: expected
                });
            }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(this.lexer.yytext);
            lstack.push(this.lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                if (recovering > 0) {
                    recovering--;
                }
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {
                first_line: lstack[lstack.length - (len || 1)].first_line,
                last_line: lstack[lstack.length - 1].last_line,
                first_column: lstack[lstack.length - (len || 1)].first_column,
                last_column: lstack[lstack.length - 1].last_column
            };
            if (ranges) {
                yyval._$.range = [
                    lstack[lstack.length - (len || 1)].range[0],
                    lstack[lstack.length - 1].range[1]
                ];
            }
            r = this.performAction.apply(yyval, [
                yytext,
                yyleng,
                yylineno,
                this.yy,
                action[1],
                vstack,
                lstack
            ].concat(args));
            if (typeof r !== 'undefined') {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}};


    ast = typeof window !== "undefined" && window !== null ? window.katra : ast = require('./katra');
    cmd = ast.command;
    bnf = ast.bnf;


/* generated by jison-lex 0.2.1 */
var lexer = (function(){
var lexer = {

EOF:1,

parseError:function parseError(str, hash) {
        if (this.yy.parser) {
            this.yy.parser.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },

// resets the lexer, sets new input
setInput:function (input) {
        this._input = input;
        this._more = this._backtrack = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {
            first_line: 1,
            first_column: 0,
            last_line: 1,
            last_column: 0
        };
        if (this.options.ranges) {
            this.yylloc.range = [0,0];
        }
        this.offset = 0;
        return this;
    },

// consumes and returns one char from the input
input:function () {
        var ch = this._input[0];
        this.yytext += ch;
        this.yyleng++;
        this.offset++;
        this.match += ch;
        this.matched += ch;
        var lines = ch.match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
        } else {
            this.yylloc.last_column++;
        }
        if (this.options.ranges) {
            this.yylloc.range[1]++;
        }

        this._input = this._input.slice(1);
        return ch;
    },

// unshifts one char (or a string) into the input
unput:function (ch) {
        var len = ch.length;
        var lines = ch.split(/(?:\r\n?|\n)/g);

        this._input = ch + this._input;
        this.yytext = this.yytext.substr(0, this.yytext.length - len - 1);
        //this.yyleng -= len;
        this.offset -= len;
        var oldLines = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length - 1);
        this.matched = this.matched.substr(0, this.matched.length - 1);

        if (lines.length - 1) {
            this.yylineno -= lines.length - 1;
        }
        var r = this.yylloc.range;

        this.yylloc = {
            first_line: this.yylloc.first_line,
            last_line: this.yylineno + 1,
            first_column: this.yylloc.first_column,
            last_column: lines ?
                (lines.length === oldLines.length ? this.yylloc.first_column : 0)
                 + oldLines[oldLines.length - lines.length].length - lines[0].length :
              this.yylloc.first_column - len
        };

        if (this.options.ranges) {
            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
        }
        this.yyleng = this.yytext.length;
        return this;
    },

// When called from action, caches matched text and appends it on next action
more:function () {
        this._more = true;
        return this;
    },

// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.
reject:function () {
        if (this.options.backtrack_lexer) {
            this._backtrack = true;
        } else {
            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n' + this.showPosition(), {
                text: "",
                token: null,
                line: this.yylineno
            });

        }
        return this;
    },

// retain first n characters of the match
less:function (n) {
        this.unput(this.match.slice(n));
    },

// displays already matched input, i.e. for error messages
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },

// displays upcoming input, i.e. for error messages
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\n/g, "");
    },

// displays the character position where the lexing error occurred, i.e. for error messages
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c + "^";
    },

// test the lexed token: return FALSE when not a match, otherwise return token
test_match:function (match, indexed_rule) {
        var token,
            lines,
            backup;

        if (this.options.backtrack_lexer) {
            // save context
            backup = {
                yylineno: this.yylineno,
                yylloc: {
                    first_line: this.yylloc.first_line,
                    last_line: this.last_line,
                    first_column: this.yylloc.first_column,
                    last_column: this.yylloc.last_column
                },
                yytext: this.yytext,
                match: this.match,
                matches: this.matches,
                matched: this.matched,
                yyleng: this.yyleng,
                offset: this.offset,
                _more: this._more,
                _input: this._input,
                yy: this.yy,
                conditionStack: this.conditionStack.slice(0),
                done: this.done
            };
            if (this.options.ranges) {
                backup.yylloc.range = this.yylloc.range.slice(0);
            }
        }

        lines = match[0].match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno += lines.length;
        }
        this.yylloc = {
            first_line: this.yylloc.last_line,
            last_line: this.yylineno + 1,
            first_column: this.yylloc.last_column,
            last_column: lines ?
                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\r?\n?/)[0].length :
                         this.yylloc.last_column + match[0].length
        };
        this.yytext += match[0];
        this.match += match[0];
        this.matches = match;
        this.yyleng = this.yytext.length;
        if (this.options.ranges) {
            this.yylloc.range = [this.offset, this.offset += this.yyleng];
        }
        this._more = false;
        this._backtrack = false;
        this._input = this._input.slice(match[0].length);
        this.matched += match[0];
        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);
        if (this.done && this._input) {
            this.done = false;
        }
        if (token) {
            return token;
        } else if (this._backtrack) {
            // recover context
            for (var k in backup) {
                this[k] = backup[k];
            }
            return false; // rule action called reject() implying the next rule should be tested instead.
        }
        return false;
    },

// return next match in input
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) {
            this.done = true;
        }

        var token,
            match,
            tempMatch,
            index;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i = 0; i < rules.length; i++) {
            tempMatch = this._input.match(this.rules[rules[i]]);
            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                match = tempMatch;
                index = i;
                if (this.options.backtrack_lexer) {
                    token = this.test_match(tempMatch, rules[i]);
                    if (token !== false) {
                        return token;
                    } else if (this._backtrack) {
                        match = false;
                        continue; // rule action called reject() implying a rule MISmatch.
                    } else {
                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
                        return false;
                    }
                } else if (!this.options.flex) {
                    break;
                }
            }
        }
        if (match) {
            token = this.test_match(match, rules[index]);
            if (token !== false) {
                return token;
            }
            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
            return false;
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\n' + this.showPosition(), {
                text: "",
                token: null,
                line: this.yylineno
            });
        }
    },

// return next match that has a token
lex:function lex() {
        var r = this.next();
        if (r) {
            return r;
        } else {
            return this.lex();
        }
    },

// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)
begin:function begin(condition) {
        this.conditionStack.push(condition);
    },

// pop the previously active lexer condition state off the condition stack
popState:function popState() {
        var n = this.conditionStack.length - 1;
        if (n > 0) {
            return this.conditionStack.pop();
        } else {
            return this.conditionStack[0];
        }
    },

// produce the lexer rule set which is active for the currently active lexer condition state
_currentRules:function _currentRules() {
        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {
            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
        } else {
            return this.conditions["INITIAL"].rules;
        }
    },

// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available
topState:function topState(n) {
        n = this.conditionStack.length - 1 - Math.abs(n || 0);
        if (n >= 0) {
            return this.conditionStack[n];
        } else {
            return "INITIAL";
        }
    },

// alias for begin(condition)
pushState:function pushState(condition) {
        this.begin(condition);
    },

// return the number of states currently on the stack
stateStackSize:function stateStackSize() {
        return this.conditionStack.length;
    },
options: {},
performAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {

var YYSTATE=YY_START;
switch($avoiding_name_collisions) {
case 0:return 5;
break;
case 1:/* skip whitespace */;
break;
case 2:return 81;
break;
case 3:return 82;
break;
case 4:return 80;
break;
case 5:return 79;
break;
case 6:return 83;
break;
case 7:return 73;
break;
case 8:return 33;
break;
case 9:return 74;
break;
case 10:return 78;
break;
case 11:return 76;
break;
case 12:return 77;
break;
case 13:return 75;
break;
case 14:return 71;
break;
case 15:return 70;
break;
case 16:return 72;
break;
case 17:return 71;
break;
case 18:return 70;
break;
case 19:return 72;
break;
case 20:return 26;
break;
case 21:return 27;
break;
case 22:return 84;
break;
case 23:return 86;
break;
case 24:return 15;
break;
case 25:return ':';
break;
case 26:return 63;
break;
case 27:return 87;
break;
case 28:return 88;
break;
case 29:return 89;
break;
case 30:return 90;
break;
case 31:return 91;
break;
case 32:return 94;
break;
case 33:return 95;
break;
case 34:return 96;
break;
case 35:return 97;
break;
case 36:return 99;
break;
case 37:return 100;
break;
case 38:return 101;
break;
case 39:return 102;
break;
case 40:return 103;
break;
case 41:return 87;
break;
case 42:return 88;
break;
case 43:return 89;
break;
case 44:return 90;
break;
case 45:return 91;
break;
case 46:return 94;
break;
case 47:return 95;
break;
case 48:return 96;
break;
case 49:return 97;
break;
case 50:return 99;
break;
case 51:return 100;
break;
case 52:return 101;
break;
case 53:return 102;
break;
case 54:return 103;
break;
case 55:return 13;
break;
case 56:return 14;
break;
case 57:return 7;
break;
case 58:return 16;
break;
case 59:return 19;
break;
case 60:return 20;
break;
case 61:return 21;
break;
case 62:return 25;
break;
case 63:return 28;
break;
case 64:return 30;
break;
case 65:return 35;
break;
case 66:return 37;
break;
case 67:return 38;
break;
case 68:return 41;
break;
case 69:return 45;
break;
case 70:return 42;
break;
case 71:return 46;
break;
case 72:return 48;
break;
case 73:return 50;
break;
case 74:return 53;
break;
case 75:return 55
break;
case 76:return 58;
break;
case 77:return 43;
break;
case 78:return 24;
break;
case 79:return 23;
break;
case 80:return 59;
break;
case 81:return 17;
break;
case 82:return 18;
break;
case 83:return 64;
break;
case 84:return 68;
break;
case 85:return 65;
break;
case 86:return 66;
break;
case 87:return 67
break;
case 88:return 40;
break;
case 89:return 69;
break;
case 90:return 47;
break;
case 91:return 39;
break;
case 92:return 22
break;
case 93:return 62;
break;
case 94:return 56;
break;
case 95:return 13;
break;
case 96:return 14;
break;
case 97:return 7;
break;
case 98:return 16;
break;
case 99:return 19;
break;
case 100:return 20;
break;
case 101:return 21;
break;
case 102:return 25;
break;
case 103:return 28;
break;
case 104:return 30;
break;
case 105:return 35;
break;
case 106:return 37;
break;
case 107:return 38;
break;
case 108:return 41;
break;
case 109:return 45;
break;
case 110:return 42;
break;
case 111:return 46;
break;
case 112:return 48;
break;
case 113:return 50;
break;
case 114:return 53;
break;
case 115:return 55
break;
case 116:return 58;
break;
case 117:return 43;
break;
case 118:return 24;
break;
case 119:return 23;
break;
case 120:return 59;
break;
case 121:return 17;
break;
case 122:return 18;
break;
case 123:return 64;
break;
case 124:return 68;
break;
case 125:return 65;
break;
case 126:return 67;
break;
case 127:return 66;
break;
case 128:return 40;
break;
case 129:return 69;
break;
case 130:return 47;
break;
case 131:return 39;
break;
case 132:return 22;
break;
case 133:return 62;
break;
case 134:return 56;
break;
case 135:return 105;
break;
case 136:return 12;
break;
case 137:return 52;
break;
case 138:return 8;
break;
case 139:return 31;
break;
case 140:return 32;
break;
case 141:return 6;
break;
case 142:return 'INVALID';
break;
}
},
rules: [/^(?:\n)/,/^(?:[\t ]+)/,/^(?:\*)/,/^(?:\/)/,/^(?:-)/,/^(?:\+)/,/^(?:\^)/,/^(?:==)/,/^(?:=)/,/^(?:<>)/,/^(?:<=)/,/^(?:>=)/,/^(?:<)/,/^(?:>)/,/^(?:AND\b)/,/^(?:OR\b)/,/^(?:NOT\b)/,/^(?:and\b)/,/^(?:or\b)/,/^(?:not\b)/,/^(?:\()/,/^(?:\))/,/^(?:\[)/,/^(?:\])/,/^(?:,)/,/^(?::)/,/^(?:;)/,/^(?:ABS\b)/,/^(?:ATN\b)/,/^(?:COS\b)/,/^(?:EXP\b)/,/^(?:INT\b)/,/^(?:LOG\b)/,/^(?:RND\b)/,/^(?:SGN\b)/,/^(?:SIN\b)/,/^(?:SQR\b)/,/^(?:SUBSTR\b)/,/^(?:TAB\b)/,/^(?:TAN\b)/,/^(?:TIM\b)/,/^(?:abs\b)/,/^(?:atn\b)/,/^(?:cos\b)/,/^(?:exp\b)/,/^(?:int\b)/,/^(?:log\b)/,/^(?:rnd\b)/,/^(?:sgn\b)/,/^(?:sin\b)/,/^(?:sqr\b)/,/^(?:substr\b)/,/^(?:tab\b)/,/^(?:tan\b)/,/^(?:tim\b)/,/^(?:CLS\b)/,/^(?:DEL\b)/,/^(?:GET\b)/,/^(?:LIST\b)/,/^(?:RUN\b)/,/^(?:SAVE\b)/,/^(?:SCR\b)/,/^(?:BASE\b)/,/^(?:DATA\b)/,/^(?:DEF\b)/,/^(?:DIM\b)/,/^(?:END\b)/,/^(?:FOR\b)/,/^(?:GO\b)/,/^(?:GOSUB\b)/,/^(?:GOTO\b)/,/^(?:IF\b)/,/^(?:IMAGE\b)/,/^(?:INPUT\b)/,/^(?:LET\b)/,/^(?:MAT\b)/,/^(?:NEXT\b)/,/^(?:OF\b)/,/^(?:OFF\b)/,/^(?:ON\b)/,/^(?:PRINT\b)/,/^(?:PURGE\b)/,/^(?:QUIT\b)/,/^(?:RANDOMIZE\b)/,/^(?:REM.*)/,/^(?:READ\b)/,/^(?:RESTORE\b)/,/^(?:RETURN\b)/,/^(?:STEP\b)/,/^(?:STOP\b)/,/^(?:THEN\b)/,/^(?:TO\b)/,/^(?:TRACE\b)/,/^(?:USING\b)/,/^(?:ZER\b)/,/^(?:cls\b)/,/^(?:del\b)/,/^(?:get\b)/,/^(?:list\b)/,/^(?:run\b)/,/^(?:save\b)/,/^(?:scr\b)/,/^(?:base\b)/,/^(?:data\b)/,/^(?:def\b)/,/^(?:dim\b)/,/^(?:end\b)/,/^(?:for\b)/,/^(?:go\b)/,/^(?:gosub\b)/,/^(?:goto\b)/,/^(?:if\b)/,/^(?:image\b)/,/^(?:input\b)/,/^(?:let\b)/,/^(?:mat\b)/,/^(?:next\b)/,/^(?:of\b)/,/^(?:off\b)/,/^(?:on\b)/,/^(?:print\b)/,/^(?:purge\b)/,/^(?:quit\b)/,/^(?:randomize\b)/,/^(?:rem.*)/,/^(?:read\b)/,/^(?:return\b)/,/^(?:restore\b)/,/^(?:step\b)/,/^(?:stop\b)/,/^(?:then\b)/,/^(?:to\b)/,/^(?:trace\b)/,/^(?:using\b)/,/^(?:zer\b)/,/^(?:(([0-9])*\.([0-9])+))/,/^(?:(([0-9])+))/,/^(?:("[^"]*"))/,/^(?:('[A-Za-z][A-Za-z0-9\/_-]+'))/,/^(?:([Ff][Nn]([A-Za-z])))/,/^(?:((([A-Za-z])([A-Za-z0-9])?)[$%]?))/,/^(?:$)/,/^(?:.)/],
conditions: {"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142],"inclusive":true}}
};
return lexer;
})();
parser.lexer = lexer;
function Parser () {
  this.yy = {};
}
Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();


if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = kc;
exports.Parser = kc.Parser;
exports.parse = function () { return kc.parse.apply(kc, arguments); };
exports.main = function commonjsMain(args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}